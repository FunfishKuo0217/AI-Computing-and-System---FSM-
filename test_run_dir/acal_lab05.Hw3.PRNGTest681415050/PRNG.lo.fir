circuit PRNG :
  module PRNG :
    input clock : Clock
    input reset : UInt<1>
    input io_gen : UInt<1>
    output io_puzzle_0 : UInt<4>
    output io_puzzle_1 : UInt<4>
    output io_puzzle_2 : UInt<4>
    output io_puzzle_3 : UInt<4>
    output io_ready : UInt<1>

    reg state : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state) @[PRNG.scala 15:24]
    reg shiftReg_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_0) @[PRNG.scala 17:27]
    reg shiftReg_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_1) @[PRNG.scala 17:27]
    reg shiftReg_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_2) @[PRNG.scala 17:27]
    reg shiftReg_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_3) @[PRNG.scala 17:27]
    reg shiftReg_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_4) @[PRNG.scala 17:27]
    reg shiftReg_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_5) @[PRNG.scala 17:27]
    reg shiftReg_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_6) @[PRNG.scala 17:27]
    reg shiftReg_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_7) @[PRNG.scala 17:27]
    reg shiftReg_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_8) @[PRNG.scala 17:27]
    reg shiftReg_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_9) @[PRNG.scala 17:27]
    reg shiftReg_10 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_10) @[PRNG.scala 17:27]
    reg shiftReg_11 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_11) @[PRNG.scala 17:27]
    reg shiftReg_12 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_12) @[PRNG.scala 17:27]
    reg shiftReg_13 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_13) @[PRNG.scala 17:27]
    reg shiftReg_14 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_14) @[PRNG.scala 17:27]
    reg shiftReg_15 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_15) @[PRNG.scala 17:27]
    reg regAns_0 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_0) @[PRNG.scala 18:25]
    reg regAns_1 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_1) @[PRNG.scala 18:25]
    reg regAns_2 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_2) @[PRNG.scala 18:25]
    reg regAns_3 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_3) @[PRNG.scala 18:25]
    reg regDup_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_0) @[PRNG.scala 19:25]
    reg regDup_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_1) @[PRNG.scala 19:25]
    reg regDup_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_2) @[PRNG.scala 19:25]
    reg regDup_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_3) @[PRNG.scala 19:25]
    reg regDup_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_4) @[PRNG.scala 19:25]
    reg regDup_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_5) @[PRNG.scala 19:25]
    reg goToRangeMap : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToRangeMap) @[PRNG.scala 20:31]
    reg goToCheckDup : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToCheckDup) @[PRNG.scala 21:31]
    reg goToValidateDup : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToValidateDup) @[PRNG.scala 22:34]
    reg goToOutput : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToOutput) @[PRNG.scala 23:29]
    reg goToReGen : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToReGen) @[PRNG.scala 24:28]
    reg cntReg : UInt<3>, clock with :
      reset => (UInt<1>("h0"), cntReg) @[PRNG.scala 27:25]
    reg cntStart : UInt<1>, clock with :
      reset => (UInt<1>("h0"), cntStart) @[PRNG.scala 29:27]
    node _T = eq(cntReg, UInt<1>("h0")) @[PRNG.scala 30:23]
    node _T_1 = eq(cntStart, UInt<1>("h1")) @[PRNG.scala 32:19]
    node _T_2 = sub(cntReg, UInt<1>("h1")) @[PRNG.scala 34:37]
    node _T_3 = tail(_T_2, 1) @[PRNG.scala 34:37]
    node cntDone = _T @[PRNG.scala 28:23 PRNG.scala 30:13]
    node _GEN_0 = mux(cntDone, UInt<2>("h3"), _T_3) @[PRNG.scala 33:22 PRNG.scala 33:31 PRNG.scala 34:27]
    node _GEN_1 = mux(_T_1, _GEN_0, cntReg) @[PRNG.scala 32:30 PRNG.scala 27:25]
    node _T_4 = eq(UInt<3>("h0"), state) @[Conditional.scala 37:30]
    node _T_5 = eq(UInt<3>("h1"), state) @[Conditional.scala 37:30]
    node _T_6 = eq(cntDone, UInt<1>("h1")) @[PRNG.scala 40:33]
    node _GEN_2 = mux(_T_6, UInt<3>("h5"), state) @[PRNG.scala 40:44 PRNG.scala 40:52 PRNG.scala 15:24]
    node _T_7 = eq(UInt<3>("h5"), state) @[Conditional.scala 37:30]
    node _T_8 = eq(goToRangeMap, UInt<1>("h1")) @[PRNG.scala 41:38]
    node _GEN_3 = mux(_T_8, UInt<3>("h2"), state) @[PRNG.scala 41:49 PRNG.scala 41:57 PRNG.scala 15:24]
    node _T_9 = eq(UInt<3>("h2"), state) @[Conditional.scala 37:30]
    node _T_10 = eq(goToCheckDup, UInt<1>("h1")) @[PRNG.scala 42:43]
    node _GEN_4 = mux(_T_10, UInt<3>("h3"), state) @[PRNG.scala 42:54 PRNG.scala 42:62 PRNG.scala 15:24]
    node _T_11 = eq(UInt<3>("h3"), state) @[Conditional.scala 37:30]
    node _T_12 = eq(goToValidateDup, UInt<1>("h1")) @[PRNG.scala 43:45]
    node _GEN_5 = mux(_T_12, UInt<3>("h4"), state) @[PRNG.scala 43:56 PRNG.scala 43:64 PRNG.scala 15:24]
    node _T_13 = eq(UInt<3>("h4"), state) @[Conditional.scala 37:30]
    node _T_14 = eq(goToReGen, UInt<1>("h1")) @[PRNG.scala 45:28]
    node _T_15 = eq(goToOutput, UInt<1>("h1")) @[PRNG.scala 46:34]
    node _GEN_6 = mux(_T_15, UInt<3>("h6"), state) @[PRNG.scala 46:45 PRNG.scala 46:53 PRNG.scala 15:24]
    node _GEN_7 = mux(_T_14, UInt<3>("h1"), _GEN_6) @[PRNG.scala 45:39 PRNG.scala 45:47]
    node _T_16 = eq(UInt<3>("h6"), state) @[Conditional.scala 37:30]
    node _T_17 = eq(io_gen, UInt<1>("h1")) @[PRNG.scala 49:25]
    node _GEN_8 = mux(_T_17, UInt<3>("h0"), state) @[PRNG.scala 49:36 PRNG.scala 49:44 PRNG.scala 15:24]
    node _GEN_9 = mux(_T_16, _GEN_8, state) @[Conditional.scala 39:67 PRNG.scala 15:24]
    node _GEN_10 = mux(_T_13, _GEN_7, _GEN_9) @[Conditional.scala 39:67]
    node _GEN_11 = mux(_T_11, _GEN_5, _GEN_10) @[Conditional.scala 39:67]
    node _GEN_12 = mux(_T_9, _GEN_4, _GEN_11) @[Conditional.scala 39:67]
    node _GEN_13 = mux(_T_7, _GEN_3, _GEN_12) @[Conditional.scala 39:67]
    node _GEN_14 = mux(_T_5, _GEN_2, _GEN_13) @[Conditional.scala 39:67]
    node _GEN_15 = mux(_T_4, UInt<3>("h1"), _GEN_14) @[Conditional.scala 40:58 PRNG.scala 39:26]
    node _T_18 = eq(state, UInt<3>("h0")) @[PRNG.scala 58:16]
    node _T_19 = eq(io_ready, UInt<1>("h0")) @[PRNG.scala 59:18]
    node _T_20 = eq(state, UInt<3>("h1")) @[PRNG.scala 61:16]
    node _T_21 = xor(shiftReg_0, shiftReg_2) @[PRNG.scala 66:38]
    node _T_22 = xor(_T_21, shiftReg_3) @[PRNG.scala 66:51]
    node _T_23 = xor(_T_22, shiftReg_5) @[PRNG.scala 66:64]
    node _GEN_16 = mux(_T_20, UInt<1>("h1"), cntStart) @[PRNG.scala 61:26 PRNG.scala 62:18 PRNG.scala 29:27]
    node _GEN_17 = mux(_T_20, UInt<1>("h0"), goToReGen) @[PRNG.scala 61:26 PRNG.scala 63:19 PRNG.scala 24:28]
    node _GEN_18 = mux(_T_20, UInt<1>("h0"), goToOutput) @[PRNG.scala 61:26 PRNG.scala 64:20 PRNG.scala 23:29]
    node _GEN_19 = mux(_T_20, shiftReg_1, shiftReg_0) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_20 = mux(_T_20, shiftReg_2, shiftReg_1) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_21 = mux(_T_20, shiftReg_3, shiftReg_2) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_22 = mux(_T_20, shiftReg_4, shiftReg_3) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_23 = mux(_T_20, shiftReg_5, shiftReg_4) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_24 = mux(_T_20, shiftReg_6, shiftReg_5) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_25 = mux(_T_20, shiftReg_7, shiftReg_6) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_26 = mux(_T_20, shiftReg_8, shiftReg_7) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_27 = mux(_T_20, shiftReg_9, shiftReg_8) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_28 = mux(_T_20, shiftReg_10, shiftReg_9) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_29 = mux(_T_20, shiftReg_11, shiftReg_10) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_30 = mux(_T_20, shiftReg_12, shiftReg_11) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_31 = mux(_T_20, shiftReg_13, shiftReg_12) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_32 = mux(_T_20, shiftReg_14, shiftReg_13) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_33 = mux(_T_20, shiftReg_15, shiftReg_14) @[PRNG.scala 61:26 PRNG.scala 65:54 PRNG.scala 17:27]
    node _GEN_34 = mux(_T_20, _T_23, shiftReg_15) @[PRNG.scala 61:26 PRNG.scala 66:22 PRNG.scala 17:27]
    node _T_24 = eq(state, UInt<3>("h5")) @[PRNG.scala 68:16]
    node lo = cat(shiftReg_1, shiftReg_0) @[Cat.scala 30:58]
    node hi = cat(shiftReg_3, shiftReg_2) @[Cat.scala 30:58]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    node lo_1 = cat(shiftReg_5, shiftReg_4) @[Cat.scala 30:58]
    node hi_1 = cat(shiftReg_7, shiftReg_6) @[Cat.scala 30:58]
    node _T_26 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node lo_2 = cat(shiftReg_9, shiftReg_8) @[Cat.scala 30:58]
    node hi_2 = cat(shiftReg_11, shiftReg_10) @[Cat.scala 30:58]
    node _T_27 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node lo_3 = cat(shiftReg_13, shiftReg_12) @[Cat.scala 30:58]
    node hi_3 = cat(shiftReg_15, shiftReg_14) @[Cat.scala 30:58]
    node _T_28 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[PRNG.scala 75:32]
    node _GEN_35 = mux(_T_24, UInt<1>("h0"), _GEN_16) @[PRNG.scala 68:25 PRNG.scala 69:18]
    node _GEN_36 = mux(_T_24, UInt<2>("h3"), _GEN_1) @[PRNG.scala 68:25 PRNG.scala 70:16]
    node _GEN_37 = mux(_T_24, _T_25, regAns_0) @[PRNG.scala 68:25 PRNG.scala 71:19 PRNG.scala 18:25]
    node _GEN_38 = mux(_T_24, _T_26, regAns_1) @[PRNG.scala 68:25 PRNG.scala 72:19 PRNG.scala 18:25]
    node _GEN_39 = mux(_T_24, _T_27, regAns_2) @[PRNG.scala 68:25 PRNG.scala 73:19 PRNG.scala 18:25]
    node _GEN_40 = mux(_T_24, _T_28, regAns_3) @[PRNG.scala 68:25 PRNG.scala 74:19 PRNG.scala 18:25]
    node _GEN_41 = mux(_T_24, REG, goToRangeMap) @[PRNG.scala 68:25 PRNG.scala 75:22 PRNG.scala 20:31]
    node _T_29 = eq(state, UInt<3>("h2")) @[PRNG.scala 77:16]
    node _T_30 = gt(regAns_0, UInt<4>("h9")) @[PRNG.scala 79:36]
    node _T_31 = sub(regAns_0, UInt<4>("ha")) @[PRNG.scala 79:53]
    node _T_32 = tail(_T_31, 1) @[PRNG.scala 79:53]
    node _T_33 = mux(_T_30, _T_32, regAns_0) @[PRNG.scala 79:25]
    node _T_34 = gt(regAns_1, UInt<4>("h9")) @[PRNG.scala 80:36]
    node _T_35 = sub(regAns_1, UInt<4>("ha")) @[PRNG.scala 80:53]
    node _T_36 = tail(_T_35, 1) @[PRNG.scala 80:53]
    node _T_37 = mux(_T_34, _T_36, regAns_1) @[PRNG.scala 80:25]
    node _T_38 = gt(regAns_2, UInt<4>("h9")) @[PRNG.scala 81:36]
    node _T_39 = sub(regAns_2, UInt<4>("ha")) @[PRNG.scala 81:53]
    node _T_40 = tail(_T_39, 1) @[PRNG.scala 81:53]
    node _T_41 = mux(_T_38, _T_40, regAns_2) @[PRNG.scala 81:25]
    node _T_42 = gt(regAns_3, UInt<4>("h9")) @[PRNG.scala 82:36]
    node _T_43 = sub(regAns_3, UInt<4>("ha")) @[PRNG.scala 82:53]
    node _T_44 = tail(_T_43, 1) @[PRNG.scala 82:53]
    node _T_45 = mux(_T_42, _T_44, regAns_3) @[PRNG.scala 82:25]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[PRNG.scala 83:32]
    node _GEN_42 = mux(_T_29, UInt<1>("h0"), _GEN_41) @[PRNG.scala 77:30 PRNG.scala 78:22]
    node _GEN_43 = mux(_T_29, _T_33, _GEN_37) @[PRNG.scala 77:30 PRNG.scala 79:19]
    node _GEN_44 = mux(_T_29, _T_37, _GEN_38) @[PRNG.scala 77:30 PRNG.scala 80:19]
    node _GEN_45 = mux(_T_29, _T_41, _GEN_39) @[PRNG.scala 77:30 PRNG.scala 81:19]
    node _GEN_46 = mux(_T_29, _T_45, _GEN_40) @[PRNG.scala 77:30 PRNG.scala 82:19]
    node _GEN_47 = mux(_T_29, REG_1, goToCheckDup) @[PRNG.scala 77:30 PRNG.scala 83:22 PRNG.scala 21:31]
    node _T_46 = eq(state, UInt<3>("h3")) @[PRNG.scala 85:16]
    node _T_47 = eq(regAns_0, regAns_1) @[PRNG.scala 88:36]
    node _T_48 = mux(_T_47, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 88:25]
    node _T_49 = eq(regAns_0, regAns_2) @[PRNG.scala 89:36]
    node _T_50 = mux(_T_49, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 89:25]
    node _T_51 = eq(regAns_0, regAns_3) @[PRNG.scala 90:36]
    node _T_52 = mux(_T_51, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 90:25]
    node _T_53 = eq(regAns_1, regAns_2) @[PRNG.scala 91:36]
    node _T_54 = mux(_T_53, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 91:25]
    node _T_55 = eq(regAns_1, regAns_3) @[PRNG.scala 92:36]
    node _T_56 = mux(_T_55, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 92:25]
    node _T_57 = eq(regAns_2, regAns_3) @[PRNG.scala 93:36]
    node _T_58 = mux(_T_57, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 93:25]
    reg REG_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_2) @[PRNG.scala 94:35]
    node _GEN_48 = mux(_T_46, UInt<1>("h0"), _GEN_47) @[PRNG.scala 85:30 PRNG.scala 86:22]
    node _GEN_49 = mux(_T_46, _T_48, regDup_0) @[PRNG.scala 85:30 PRNG.scala 88:19 PRNG.scala 19:25]
    node _GEN_50 = mux(_T_46, _T_50, regDup_1) @[PRNG.scala 85:30 PRNG.scala 89:19 PRNG.scala 19:25]
    node _GEN_51 = mux(_T_46, _T_52, regDup_2) @[PRNG.scala 85:30 PRNG.scala 90:19 PRNG.scala 19:25]
    node _GEN_52 = mux(_T_46, _T_54, regDup_3) @[PRNG.scala 85:30 PRNG.scala 91:19 PRNG.scala 19:25]
    node _GEN_53 = mux(_T_46, _T_56, regDup_4) @[PRNG.scala 85:30 PRNG.scala 92:19 PRNG.scala 19:25]
    node _GEN_54 = mux(_T_46, _T_58, regDup_5) @[PRNG.scala 85:30 PRNG.scala 93:19 PRNG.scala 19:25]
    node _GEN_55 = mux(_T_46, REG_2, goToValidateDup) @[PRNG.scala 85:30 PRNG.scala 94:25 PRNG.scala 22:34]
    node _T_59 = eq(state, UInt<3>("h4")) @[PRNG.scala 96:16]
    node _T_60 = or(regDup_0, regDup_1) @[PRNG.scala 98:44]
    node _T_61 = or(_T_60, regDup_2) @[PRNG.scala 98:55]
    node _T_62 = or(_T_61, regDup_3) @[PRNG.scala 98:66]
    node _T_63 = or(_T_62, regDup_4) @[PRNG.scala 98:77]
    node _T_64 = or(_T_63, regDup_5) @[PRNG.scala 98:88]
    node _T_65 = eq(_T_64, UInt<1>("h1")) @[PRNG.scala 98:100]
    node _T_66 = mux(_T_65, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 98:33]
    reg REG_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_3) @[PRNG.scala 98:29]
    node _T_67 = or(regDup_0, regDup_1) @[PRNG.scala 99:45]
    node _T_68 = or(_T_67, regDup_2) @[PRNG.scala 99:56]
    node _T_69 = or(_T_68, regDup_3) @[PRNG.scala 99:67]
    node _T_70 = or(_T_69, regDup_4) @[PRNG.scala 99:78]
    node _T_71 = or(_T_70, regDup_5) @[PRNG.scala 99:89]
    node _T_72 = eq(_T_71, UInt<1>("h0")) @[PRNG.scala 99:101]
    node _T_73 = mux(_T_72, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 99:34]
    reg REG_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_4) @[PRNG.scala 99:30]
    node _GEN_56 = mux(_T_59, UInt<1>("h0"), _GEN_55) @[PRNG.scala 96:28 PRNG.scala 97:25]
    node _GEN_57 = mux(_T_59, REG_3, _GEN_17) @[PRNG.scala 96:28 PRNG.scala 98:19]
    node _GEN_58 = mux(_T_59, REG_4, _GEN_18) @[PRNG.scala 96:28 PRNG.scala 99:20]
    node _T_74 = eq(state, UInt<3>("h6")) @[PRNG.scala 101:16]
    reg REG_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_5) @[PRNG.scala 108:28]
    node _GEN_59 = mux(_T_74, UInt<1>("h0"), _GEN_58) @[PRNG.scala 101:28 PRNG.scala 102:20]
    node _GEN_60 = mux(_T_74, UInt<1>("h0"), _GEN_57) @[PRNG.scala 101:28 PRNG.scala 103:19]
    node _WIRE_3_0 = UInt<4>("h0") @[PRNG.scala 55:25 PRNG.scala 55:25]
    node _GEN_61 = mux(_T_74, regAns_0, _WIRE_3_0) @[PRNG.scala 101:28 PRNG.scala 104:22 PRNG.scala 55:15]
    node _WIRE_3_1 = UInt<4>("h0") @[PRNG.scala 55:25 PRNG.scala 55:25]
    node _GEN_62 = mux(_T_74, regAns_1, _WIRE_3_1) @[PRNG.scala 101:28 PRNG.scala 105:22 PRNG.scala 55:15]
    node _WIRE_3_2 = UInt<4>("h0") @[PRNG.scala 55:25 PRNG.scala 55:25]
    node _GEN_63 = mux(_T_74, regAns_2, _WIRE_3_2) @[PRNG.scala 101:28 PRNG.scala 106:22 PRNG.scala 55:15]
    node _WIRE_3_3 = UInt<4>("h0") @[PRNG.scala 55:25 PRNG.scala 55:25]
    node _GEN_64 = mux(_T_74, regAns_3, _WIRE_3_3) @[PRNG.scala 101:28 PRNG.scala 107:22 PRNG.scala 55:15]
    node _GEN_65 = mux(_T_74, REG_5, UInt<1>("h0")) @[PRNG.scala 101:28 PRNG.scala 108:18 PRNG.scala 54:14]
    node _WIRE__0 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__1 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__2 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__3 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__4 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__5 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__6 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__7 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__8 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__9 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__10 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__11 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__12 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__13 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__14 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE__15 = UInt<1>("h1") @[PRNG.scala 17:35 PRNG.scala 17:35]
    node _WIRE_1_0 = UInt<4>("h0") @[PRNG.scala 18:33 PRNG.scala 18:33]
    node _WIRE_1_1 = UInt<4>("h0") @[PRNG.scala 18:33 PRNG.scala 18:33]
    node _WIRE_1_2 = UInt<4>("h0") @[PRNG.scala 18:33 PRNG.scala 18:33]
    node _WIRE_1_3 = UInt<4>("h0") @[PRNG.scala 18:33 PRNG.scala 18:33]
    node _WIRE_2_0 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    node _WIRE_2_1 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    node _WIRE_2_2 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    node _WIRE_2_3 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    node _WIRE_2_4 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    node _WIRE_2_5 = UInt<1>("h1") @[PRNG.scala 19:33 PRNG.scala 19:33]
    io_puzzle_0 <= _GEN_61
    io_puzzle_1 <= _GEN_62
    io_puzzle_2 <= _GEN_63
    io_puzzle_3 <= _GEN_64
    io_ready <= _GEN_65
    state <= mux(reset, UInt<3>("h0"), _GEN_15) @[PRNG.scala 15:24 PRNG.scala 15:24]
    shiftReg_0 <= mux(reset, _WIRE__0, _GEN_19) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_1 <= mux(reset, _WIRE__1, _GEN_20) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_2 <= mux(reset, _WIRE__2, _GEN_21) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_3 <= mux(reset, _WIRE__3, _GEN_22) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_4 <= mux(reset, _WIRE__4, _GEN_23) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_5 <= mux(reset, _WIRE__5, _GEN_24) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_6 <= mux(reset, _WIRE__6, _GEN_25) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_7 <= mux(reset, _WIRE__7, _GEN_26) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_8 <= mux(reset, _WIRE__8, _GEN_27) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_9 <= mux(reset, _WIRE__9, _GEN_28) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_10 <= mux(reset, _WIRE__10, _GEN_29) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_11 <= mux(reset, _WIRE__11, _GEN_30) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_12 <= mux(reset, _WIRE__12, _GEN_31) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_13 <= mux(reset, _WIRE__13, _GEN_32) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_14 <= mux(reset, _WIRE__14, _GEN_33) @[PRNG.scala 17:27 PRNG.scala 17:27]
    shiftReg_15 <= mux(reset, _WIRE__15, _GEN_34) @[PRNG.scala 17:27 PRNG.scala 17:27]
    regAns_0 <= mux(reset, _WIRE_1_0, _GEN_43) @[PRNG.scala 18:25 PRNG.scala 18:25]
    regAns_1 <= mux(reset, _WIRE_1_1, _GEN_44) @[PRNG.scala 18:25 PRNG.scala 18:25]
    regAns_2 <= mux(reset, _WIRE_1_2, _GEN_45) @[PRNG.scala 18:25 PRNG.scala 18:25]
    regAns_3 <= mux(reset, _WIRE_1_3, _GEN_46) @[PRNG.scala 18:25 PRNG.scala 18:25]
    regDup_0 <= mux(reset, _WIRE_2_0, _GEN_49) @[PRNG.scala 19:25 PRNG.scala 19:25]
    regDup_1 <= mux(reset, _WIRE_2_1, _GEN_50) @[PRNG.scala 19:25 PRNG.scala 19:25]
    regDup_2 <= mux(reset, _WIRE_2_2, _GEN_51) @[PRNG.scala 19:25 PRNG.scala 19:25]
    regDup_3 <= mux(reset, _WIRE_2_3, _GEN_52) @[PRNG.scala 19:25 PRNG.scala 19:25]
    regDup_4 <= mux(reset, _WIRE_2_4, _GEN_53) @[PRNG.scala 19:25 PRNG.scala 19:25]
    regDup_5 <= mux(reset, _WIRE_2_5, _GEN_54) @[PRNG.scala 19:25 PRNG.scala 19:25]
    goToRangeMap <= mux(reset, UInt<1>("h0"), _GEN_42) @[PRNG.scala 20:31 PRNG.scala 20:31]
    goToCheckDup <= mux(reset, UInt<1>("h0"), _GEN_48) @[PRNG.scala 21:31 PRNG.scala 21:31]
    goToValidateDup <= mux(reset, UInt<1>("h0"), _GEN_56) @[PRNG.scala 22:34 PRNG.scala 22:34]
    goToOutput <= mux(reset, UInt<1>("h0"), _GEN_59) @[PRNG.scala 23:29 PRNG.scala 23:29]
    goToReGen <= mux(reset, UInt<1>("h0"), _GEN_60) @[PRNG.scala 24:28 PRNG.scala 24:28]
    cntReg <= mux(reset, UInt<3>("h3"), _GEN_36) @[PRNG.scala 27:25 PRNG.scala 27:25]
    cntStart <= mux(reset, UInt<1>("h0"), _GEN_35) @[PRNG.scala 29:27 PRNG.scala 29:27]
    REG <= UInt<1>("h1") @[PRNG.scala 75:32]
    REG_1 <= UInt<1>("h1") @[PRNG.scala 83:32]
    REG_2 <= UInt<1>("h1") @[PRNG.scala 94:35]
    REG_3 <= _T_66 @[PRNG.scala 98:29]
    REG_4 <= _T_73 @[PRNG.scala 99:30]
    REG_5 <= UInt<1>("h1") @[PRNG.scala 108:28]
