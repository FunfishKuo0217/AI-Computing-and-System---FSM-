circuit NumGuess :
  module PRNG :
    input clock : Clock
    input reset : UInt<1>
    input io_gen : UInt<1>
    output io_puzzle_0 : UInt<4>
    output io_puzzle_1 : UInt<4>
    output io_puzzle_2 : UInt<4>
    output io_puzzle_3 : UInt<4>
    output io_ready : UInt<1>

    reg state : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state) @[PRNG.scala 24:24]
    reg shiftReg_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_0) @[PRNG.scala 27:27]
    reg shiftReg_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_1) @[PRNG.scala 27:27]
    reg shiftReg_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_2) @[PRNG.scala 27:27]
    reg shiftReg_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_3) @[PRNG.scala 27:27]
    reg shiftReg_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_4) @[PRNG.scala 27:27]
    reg shiftReg_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_5) @[PRNG.scala 27:27]
    reg shiftReg_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_6) @[PRNG.scala 27:27]
    reg shiftReg_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_7) @[PRNG.scala 27:27]
    reg shiftReg_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_8) @[PRNG.scala 27:27]
    reg shiftReg_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_9) @[PRNG.scala 27:27]
    reg shiftReg_10 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_10) @[PRNG.scala 27:27]
    reg shiftReg_11 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_11) @[PRNG.scala 27:27]
    reg shiftReg_12 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_12) @[PRNG.scala 27:27]
    reg shiftReg_13 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_13) @[PRNG.scala 27:27]
    reg shiftReg_14 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_14) @[PRNG.scala 27:27]
    reg shiftReg_15 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), shiftReg_15) @[PRNG.scala 27:27]
    reg regAns_0 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_0) @[PRNG.scala 28:25]
    reg regAns_1 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_1) @[PRNG.scala 28:25]
    reg regAns_2 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_2) @[PRNG.scala 28:25]
    reg regAns_3 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), regAns_3) @[PRNG.scala 28:25]
    reg regDup_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_0) @[PRNG.scala 29:25]
    reg regDup_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_1) @[PRNG.scala 29:25]
    reg regDup_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_2) @[PRNG.scala 29:25]
    reg regDup_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_3) @[PRNG.scala 29:25]
    reg regDup_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_4) @[PRNG.scala 29:25]
    reg regDup_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regDup_5) @[PRNG.scala 29:25]
    reg goToRangeMap : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToRangeMap) @[PRNG.scala 31:31]
    reg goToCheckDup : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToCheckDup) @[PRNG.scala 32:31]
    reg goToValidateDup : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToValidateDup) @[PRNG.scala 33:34]
    reg goToOutput : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToOutput) @[PRNG.scala 34:29]
    reg goToReGen : UInt<1>, clock with :
      reset => (UInt<1>("h0"), goToReGen) @[PRNG.scala 35:28]
    node _T = eq(UInt<3>("h0"), state) @[Conditional.scala 37:30]
    node _T_1 = eq(UInt<3>("h1"), state) @[Conditional.scala 37:30]
    node _T_2 = eq(UInt<3>("h5"), state) @[Conditional.scala 37:30]
    node _T_3 = eq(goToRangeMap, UInt<1>("h1")) @[PRNG.scala 41:38]
    node _GEN_0 = mux(_T_3, UInt<3>("h2"), state) @[PRNG.scala 41:49 PRNG.scala 41:57 PRNG.scala 24:24]
    node _T_4 = eq(UInt<3>("h2"), state) @[Conditional.scala 37:30]
    node _T_5 = eq(goToCheckDup, UInt<1>("h1")) @[PRNG.scala 42:43]
    node _GEN_1 = mux(_T_5, UInt<3>("h3"), state) @[PRNG.scala 42:54 PRNG.scala 42:62 PRNG.scala 24:24]
    node _T_6 = eq(UInt<3>("h3"), state) @[Conditional.scala 37:30]
    node _T_7 = eq(goToValidateDup, UInt<1>("h1")) @[PRNG.scala 43:45]
    node _GEN_2 = mux(_T_7, UInt<3>("h4"), state) @[PRNG.scala 43:56 PRNG.scala 43:64 PRNG.scala 24:24]
    node _T_8 = eq(UInt<3>("h4"), state) @[Conditional.scala 37:30]
    node _T_9 = eq(goToReGen, UInt<1>("h1")) @[PRNG.scala 45:28]
    node _T_10 = eq(goToOutput, UInt<1>("h1")) @[PRNG.scala 46:34]
    node _GEN_3 = mux(_T_10, UInt<3>("h6"), state) @[PRNG.scala 46:45 PRNG.scala 46:53 PRNG.scala 24:24]
    node _GEN_4 = mux(_T_9, UInt<3>("h1"), _GEN_3) @[PRNG.scala 45:39 PRNG.scala 45:47]
    node _T_11 = eq(UInt<3>("h6"), state) @[Conditional.scala 37:30]
    node _T_12 = eq(io_gen, UInt<1>("h1")) @[PRNG.scala 48:34]
    node _GEN_5 = mux(_T_12, UInt<3>("h0"), state) @[PRNG.scala 48:45 PRNG.scala 48:53 PRNG.scala 24:24]
    node _GEN_6 = mux(_T_11, _GEN_5, state) @[Conditional.scala 39:67 PRNG.scala 24:24]
    node _GEN_7 = mux(_T_8, _GEN_4, _GEN_6) @[Conditional.scala 39:67]
    node _GEN_8 = mux(_T_6, _GEN_2, _GEN_7) @[Conditional.scala 39:67]
    node _GEN_9 = mux(_T_4, _GEN_1, _GEN_8) @[Conditional.scala 39:67]
    node _GEN_10 = mux(_T_2, _GEN_0, _GEN_9) @[Conditional.scala 39:67]
    node _GEN_11 = mux(_T_1, UInt<3>("h5"), _GEN_10) @[Conditional.scala 39:67 PRNG.scala 40:26]
    node _GEN_12 = mux(_T, UInt<3>("h1"), _GEN_11) @[Conditional.scala 40:58 PRNG.scala 39:26]
    node _T_13 = eq(state, UInt<3>("h1")) @[PRNG.scala 56:16]
    node _T_14 = xor(shiftReg_15, shiftReg_13) @[PRNG.scala 61:38]
    node _T_15 = xor(_T_14, shiftReg_12) @[PRNG.scala 61:52]
    node _T_16 = xor(_T_15, shiftReg_10) @[PRNG.scala 61:66]
    node _GEN_13 = mux(_T_13, UInt<1>("h0"), goToReGen) @[PRNG.scala 56:26 PRNG.scala 57:19 PRNG.scala 35:28]
    node _GEN_14 = mux(_T_13, UInt<1>("h0"), goToOutput) @[PRNG.scala 56:26 PRNG.scala 58:20 PRNG.scala 34:29]
    node _GEN_15 = mux(_T_13, _T_16, shiftReg_0) @[PRNG.scala 56:26 PRNG.scala 61:21 PRNG.scala 27:27]
    node _GEN_16 = mux(_T_13, shiftReg_2, shiftReg_1) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_17 = mux(_T_13, shiftReg_3, shiftReg_2) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_18 = mux(_T_13, shiftReg_4, shiftReg_3) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_19 = mux(_T_13, shiftReg_5, shiftReg_4) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_20 = mux(_T_13, shiftReg_6, shiftReg_5) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_21 = mux(_T_13, shiftReg_7, shiftReg_6) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_22 = mux(_T_13, shiftReg_8, shiftReg_7) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_23 = mux(_T_13, shiftReg_9, shiftReg_8) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_24 = mux(_T_13, shiftReg_10, shiftReg_9) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_25 = mux(_T_13, shiftReg_11, shiftReg_10) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_26 = mux(_T_13, shiftReg_12, shiftReg_11) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_27 = mux(_T_13, shiftReg_13, shiftReg_12) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_28 = mux(_T_13, shiftReg_14, shiftReg_13) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_29 = mux(_T_13, shiftReg_15, shiftReg_14) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _GEN_30 = mux(_T_13, shiftReg_0, shiftReg_15) @[PRNG.scala 56:26 PRNG.scala 59:54 PRNG.scala 27:27]
    node _T_17 = eq(state, UInt<3>("h5")) @[PRNG.scala 63:16]
    node lo = cat(shiftReg_1, shiftReg_0) @[Cat.scala 30:58]
    node hi = cat(shiftReg_3, shiftReg_2) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node lo_1 = cat(shiftReg_5, shiftReg_4) @[Cat.scala 30:58]
    node hi_1 = cat(shiftReg_7, shiftReg_6) @[Cat.scala 30:58]
    node _T_19 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node lo_2 = cat(shiftReg_9, shiftReg_8) @[Cat.scala 30:58]
    node hi_2 = cat(shiftReg_11, shiftReg_10) @[Cat.scala 30:58]
    node _T_20 = cat(hi_2, lo_2) @[Cat.scala 30:58]
    node lo_3 = cat(shiftReg_13, shiftReg_12) @[Cat.scala 30:58]
    node hi_3 = cat(shiftReg_15, shiftReg_14) @[Cat.scala 30:58]
    node _T_21 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[PRNG.scala 69:32]
    node _GEN_31 = mux(_T_17, _T_18, regAns_0) @[PRNG.scala 63:25 PRNG.scala 65:19 PRNG.scala 28:25]
    node _GEN_32 = mux(_T_17, _T_19, regAns_1) @[PRNG.scala 63:25 PRNG.scala 66:19 PRNG.scala 28:25]
    node _GEN_33 = mux(_T_17, _T_20, regAns_2) @[PRNG.scala 63:25 PRNG.scala 67:19 PRNG.scala 28:25]
    node _GEN_34 = mux(_T_17, _T_21, regAns_3) @[PRNG.scala 63:25 PRNG.scala 68:19 PRNG.scala 28:25]
    node _GEN_35 = mux(_T_17, REG, goToRangeMap) @[PRNG.scala 63:25 PRNG.scala 69:22 PRNG.scala 31:31]
    node _T_22 = eq(state, UInt<3>("h2")) @[PRNG.scala 71:16]
    node _T_23 = gt(regAns_0, UInt<4>("h9")) @[PRNG.scala 74:36]
    node _T_24 = sub(regAns_0, UInt<4>("ha")) @[PRNG.scala 74:53]
    node _T_25 = tail(_T_24, 1) @[PRNG.scala 74:53]
    node _T_26 = mux(_T_23, _T_25, regAns_0) @[PRNG.scala 74:25]
    node _T_27 = gt(regAns_1, UInt<4>("h9")) @[PRNG.scala 75:36]
    node _T_28 = sub(regAns_1, UInt<4>("ha")) @[PRNG.scala 75:53]
    node _T_29 = tail(_T_28, 1) @[PRNG.scala 75:53]
    node _T_30 = mux(_T_27, _T_29, regAns_1) @[PRNG.scala 75:25]
    node _T_31 = gt(regAns_2, UInt<4>("h9")) @[PRNG.scala 76:36]
    node _T_32 = sub(regAns_2, UInt<4>("ha")) @[PRNG.scala 76:53]
    node _T_33 = tail(_T_32, 1) @[PRNG.scala 76:53]
    node _T_34 = mux(_T_31, _T_33, regAns_2) @[PRNG.scala 76:25]
    node _T_35 = gt(regAns_3, UInt<4>("h9")) @[PRNG.scala 77:36]
    node _T_36 = sub(regAns_3, UInt<4>("ha")) @[PRNG.scala 77:53]
    node _T_37 = tail(_T_36, 1) @[PRNG.scala 77:53]
    node _T_38 = mux(_T_35, _T_37, regAns_3) @[PRNG.scala 77:25]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[PRNG.scala 78:32]
    node _GEN_36 = mux(_T_22, UInt<1>("h0"), _GEN_35) @[PRNG.scala 71:30 PRNG.scala 73:22]
    node _GEN_37 = mux(_T_22, _T_26, _GEN_31) @[PRNG.scala 71:30 PRNG.scala 74:19]
    node _GEN_38 = mux(_T_22, _T_30, _GEN_32) @[PRNG.scala 71:30 PRNG.scala 75:19]
    node _GEN_39 = mux(_T_22, _T_34, _GEN_33) @[PRNG.scala 71:30 PRNG.scala 76:19]
    node _GEN_40 = mux(_T_22, _T_38, _GEN_34) @[PRNG.scala 71:30 PRNG.scala 77:19]
    node _GEN_41 = mux(_T_22, REG_1, goToCheckDup) @[PRNG.scala 71:30 PRNG.scala 78:22 PRNG.scala 32:31]
    node _T_39 = eq(state, UInt<3>("h3")) @[PRNG.scala 80:16]
    node _T_40 = eq(regAns_0, regAns_1) @[PRNG.scala 83:36]
    node _T_41 = mux(_T_40, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 83:25]
    node _T_42 = eq(regAns_0, regAns_2) @[PRNG.scala 84:36]
    node _T_43 = mux(_T_42, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 84:25]
    node _T_44 = eq(regAns_0, regAns_3) @[PRNG.scala 85:36]
    node _T_45 = mux(_T_44, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 85:25]
    node _T_46 = eq(regAns_1, regAns_2) @[PRNG.scala 86:36]
    node _T_47 = mux(_T_46, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 86:25]
    node _T_48 = eq(regAns_1, regAns_3) @[PRNG.scala 87:36]
    node _T_49 = mux(_T_48, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 87:25]
    node _T_50 = eq(regAns_2, regAns_3) @[PRNG.scala 88:36]
    node _T_51 = mux(_T_50, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 88:25]
    reg REG_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_2) @[PRNG.scala 89:35]
    node _GEN_42 = mux(_T_39, UInt<1>("h0"), _GEN_41) @[PRNG.scala 80:30 PRNG.scala 81:22]
    node _GEN_43 = mux(_T_39, _T_41, regDup_0) @[PRNG.scala 80:30 PRNG.scala 83:19 PRNG.scala 29:25]
    node _GEN_44 = mux(_T_39, _T_43, regDup_1) @[PRNG.scala 80:30 PRNG.scala 84:19 PRNG.scala 29:25]
    node _GEN_45 = mux(_T_39, _T_45, regDup_2) @[PRNG.scala 80:30 PRNG.scala 85:19 PRNG.scala 29:25]
    node _GEN_46 = mux(_T_39, _T_47, regDup_3) @[PRNG.scala 80:30 PRNG.scala 86:19 PRNG.scala 29:25]
    node _GEN_47 = mux(_T_39, _T_49, regDup_4) @[PRNG.scala 80:30 PRNG.scala 87:19 PRNG.scala 29:25]
    node _GEN_48 = mux(_T_39, _T_51, regDup_5) @[PRNG.scala 80:30 PRNG.scala 88:19 PRNG.scala 29:25]
    node _GEN_49 = mux(_T_39, REG_2, goToValidateDup) @[PRNG.scala 80:30 PRNG.scala 89:25 PRNG.scala 33:34]
    node _T_52 = eq(state, UInt<3>("h4")) @[PRNG.scala 91:16]
    node _T_53 = or(regDup_0, regDup_1) @[PRNG.scala 94:44]
    node _T_54 = or(_T_53, regDup_2) @[PRNG.scala 94:55]
    node _T_55 = or(_T_54, regDup_3) @[PRNG.scala 94:66]
    node _T_56 = or(_T_55, regDup_4) @[PRNG.scala 94:77]
    node _T_57 = or(_T_56, regDup_5) @[PRNG.scala 94:88]
    node _T_58 = eq(_T_57, UInt<1>("h1")) @[PRNG.scala 94:100]
    node _T_59 = mux(_T_58, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 94:33]
    reg REG_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_3) @[PRNG.scala 94:29]
    node _T_60 = or(regDup_0, regDup_1) @[PRNG.scala 96:45]
    node _T_61 = or(_T_60, regDup_2) @[PRNG.scala 96:56]
    node _T_62 = or(_T_61, regDup_3) @[PRNG.scala 96:67]
    node _T_63 = or(_T_62, regDup_4) @[PRNG.scala 96:78]
    node _T_64 = or(_T_63, regDup_5) @[PRNG.scala 96:89]
    node _T_65 = eq(_T_64, UInt<1>("h0")) @[PRNG.scala 96:101]
    node _T_66 = mux(_T_65, UInt<1>("h1"), UInt<1>("h0")) @[PRNG.scala 96:34]
    reg REG_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_4) @[PRNG.scala 96:30]
    node _GEN_50 = mux(_T_52, UInt<1>("h0"), _GEN_49) @[PRNG.scala 91:28 PRNG.scala 92:25]
    node _GEN_51 = mux(_T_52, REG_3, _GEN_13) @[PRNG.scala 91:28 PRNG.scala 94:19]
    node _GEN_52 = mux(_T_52, REG_4, _GEN_14) @[PRNG.scala 91:28 PRNG.scala 96:20]
    node _T_67 = eq(state, UInt<3>("h6")) @[PRNG.scala 98:16]
    reg REG_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_5) @[PRNG.scala 105:28]
    node _GEN_53 = mux(_T_67, UInt<1>("h0"), _GEN_52) @[PRNG.scala 98:28 PRNG.scala 99:20]
    node _GEN_54 = mux(_T_67, UInt<1>("h0"), _GEN_51) @[PRNG.scala 98:28 PRNG.scala 100:19]
    node _WIRE_3_0 = UInt<4>("h0") @[PRNG.scala 53:25 PRNG.scala 53:25]
    node _GEN_55 = mux(_T_67, regAns_0, _WIRE_3_0) @[PRNG.scala 98:28 PRNG.scala 101:22 PRNG.scala 53:15]
    node _WIRE_3_1 = UInt<4>("h0") @[PRNG.scala 53:25 PRNG.scala 53:25]
    node _GEN_56 = mux(_T_67, regAns_1, _WIRE_3_1) @[PRNG.scala 98:28 PRNG.scala 102:22 PRNG.scala 53:15]
    node _WIRE_3_2 = UInt<4>("h0") @[PRNG.scala 53:25 PRNG.scala 53:25]
    node _GEN_57 = mux(_T_67, regAns_2, _WIRE_3_2) @[PRNG.scala 98:28 PRNG.scala 103:22 PRNG.scala 53:15]
    node _WIRE_3_3 = UInt<4>("h0") @[PRNG.scala 53:25 PRNG.scala 53:25]
    node _GEN_58 = mux(_T_67, regAns_3, _WIRE_3_3) @[PRNG.scala 98:28 PRNG.scala 104:22 PRNG.scala 53:15]
    node _GEN_59 = mux(_T_67, REG_5, UInt<1>("h0")) @[PRNG.scala 98:28 PRNG.scala 105:18 PRNG.scala 52:14]
    node _WIRE__0 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__1 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__2 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__3 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__4 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__5 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__6 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__7 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__8 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__9 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__10 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__11 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__12 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__13 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__14 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE__15 = UInt<1>("h1") @[PRNG.scala 27:35 PRNG.scala 27:35]
    node _WIRE_1_0 = UInt<4>("h0") @[PRNG.scala 28:33 PRNG.scala 28:33]
    node _WIRE_1_1 = UInt<4>("h0") @[PRNG.scala 28:33 PRNG.scala 28:33]
    node _WIRE_1_2 = UInt<4>("h0") @[PRNG.scala 28:33 PRNG.scala 28:33]
    node _WIRE_1_3 = UInt<4>("h0") @[PRNG.scala 28:33 PRNG.scala 28:33]
    node _WIRE_2_0 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    node _WIRE_2_1 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    node _WIRE_2_2 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    node _WIRE_2_3 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    node _WIRE_2_4 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    node _WIRE_2_5 = UInt<1>("h1") @[PRNG.scala 29:33 PRNG.scala 29:33]
    io_puzzle_0 <= _GEN_55
    io_puzzle_1 <= _GEN_56
    io_puzzle_2 <= _GEN_57
    io_puzzle_3 <= _GEN_58
    io_ready <= _GEN_59
    state <= mux(reset, UInt<3>("h0"), _GEN_12) @[PRNG.scala 24:24 PRNG.scala 24:24]
    shiftReg_0 <= mux(reset, _WIRE__0, _GEN_15) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_1 <= mux(reset, _WIRE__1, _GEN_16) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_2 <= mux(reset, _WIRE__2, _GEN_17) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_3 <= mux(reset, _WIRE__3, _GEN_18) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_4 <= mux(reset, _WIRE__4, _GEN_19) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_5 <= mux(reset, _WIRE__5, _GEN_20) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_6 <= mux(reset, _WIRE__6, _GEN_21) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_7 <= mux(reset, _WIRE__7, _GEN_22) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_8 <= mux(reset, _WIRE__8, _GEN_23) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_9 <= mux(reset, _WIRE__9, _GEN_24) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_10 <= mux(reset, _WIRE__10, _GEN_25) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_11 <= mux(reset, _WIRE__11, _GEN_26) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_12 <= mux(reset, _WIRE__12, _GEN_27) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_13 <= mux(reset, _WIRE__13, _GEN_28) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_14 <= mux(reset, _WIRE__14, _GEN_29) @[PRNG.scala 27:27 PRNG.scala 27:27]
    shiftReg_15 <= mux(reset, _WIRE__15, _GEN_30) @[PRNG.scala 27:27 PRNG.scala 27:27]
    regAns_0 <= mux(reset, _WIRE_1_0, _GEN_37) @[PRNG.scala 28:25 PRNG.scala 28:25]
    regAns_1 <= mux(reset, _WIRE_1_1, _GEN_38) @[PRNG.scala 28:25 PRNG.scala 28:25]
    regAns_2 <= mux(reset, _WIRE_1_2, _GEN_39) @[PRNG.scala 28:25 PRNG.scala 28:25]
    regAns_3 <= mux(reset, _WIRE_1_3, _GEN_40) @[PRNG.scala 28:25 PRNG.scala 28:25]
    regDup_0 <= mux(reset, _WIRE_2_0, _GEN_43) @[PRNG.scala 29:25 PRNG.scala 29:25]
    regDup_1 <= mux(reset, _WIRE_2_1, _GEN_44) @[PRNG.scala 29:25 PRNG.scala 29:25]
    regDup_2 <= mux(reset, _WIRE_2_2, _GEN_45) @[PRNG.scala 29:25 PRNG.scala 29:25]
    regDup_3 <= mux(reset, _WIRE_2_3, _GEN_46) @[PRNG.scala 29:25 PRNG.scala 29:25]
    regDup_4 <= mux(reset, _WIRE_2_4, _GEN_47) @[PRNG.scala 29:25 PRNG.scala 29:25]
    regDup_5 <= mux(reset, _WIRE_2_5, _GEN_48) @[PRNG.scala 29:25 PRNG.scala 29:25]
    goToRangeMap <= mux(reset, UInt<1>("h0"), _GEN_36) @[PRNG.scala 31:31 PRNG.scala 31:31]
    goToCheckDup <= mux(reset, UInt<1>("h0"), _GEN_42) @[PRNG.scala 32:31 PRNG.scala 32:31]
    goToValidateDup <= mux(reset, UInt<1>("h0"), _GEN_50) @[PRNG.scala 33:34 PRNG.scala 33:34]
    goToOutput <= mux(reset, UInt<1>("h0"), _GEN_53) @[PRNG.scala 34:29 PRNG.scala 34:29]
    goToReGen <= mux(reset, UInt<1>("h0"), _GEN_54) @[PRNG.scala 35:28 PRNG.scala 35:28]
    REG <= UInt<1>("h1") @[PRNG.scala 69:32]
    REG_1 <= UInt<1>("h1") @[PRNG.scala 78:32]
    REG_2 <= UInt<1>("h1") @[PRNG.scala 89:35]
    REG_3 <= _T_59 @[PRNG.scala 94:29]
    REG_4 <= _T_66 @[PRNG.scala 96:30]
    REG_5 <= UInt<1>("h1") @[PRNG.scala 105:28]

  module NumGuess :
    input clock : Clock
    input reset : UInt<1>
    input io_gen : UInt<1>
    input io_guess : UInt<16>
    output io_puzzle_0 : UInt<4>
    output io_puzzle_1 : UInt<4>
    output io_puzzle_2 : UInt<4>
    output io_puzzle_3 : UInt<4>
    output io_ready : UInt<1>
    output io_g_valid : UInt<1>
    output io_A : UInt<3>
    output io_B : UInt<3>
    input io_s_valid : UInt<1>

    inst prng of PRNG @[NumGuess.scala 27:22]
    reg state : UInt<4>, clock with :
      reset => (UInt<1>("h0"), state) @[NumGuess.scala 24:24]
    reg nums_0 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), nums_0) @[NumGuess.scala 28:23]
    reg nums_1 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), nums_1) @[NumGuess.scala 28:23]
    reg nums_2 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), nums_2) @[NumGuess.scala 28:23]
    reg nums_3 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), nums_3) @[NumGuess.scala 28:23]
    reg puzzleNums_0 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), puzzleNums_0) @[NumGuess.scala 29:29]
    reg puzzleNums_1 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), puzzleNums_1) @[NumGuess.scala 29:29]
    reg puzzleNums_2 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), puzzleNums_2) @[NumGuess.scala 29:29]
    reg puzzleNums_3 : UInt<4>, clock with :
      reset => (UInt<1>("h0"), puzzleNums_3) @[NumGuess.scala 29:29]
    reg cntA : UInt<3>, clock with :
      reset => (UInt<1>("h0"), cntA) @[NumGuess.scala 30:23]
    reg cntB : UInt<3>, clock with :
      reset => (UInt<1>("h0"), cntB) @[NumGuess.scala 31:23]
    reg regVerifyA_0 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyA_0) @[NumGuess.scala 32:29]
    reg regVerifyA_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyA_1) @[NumGuess.scala 32:29]
    reg regVerifyA_2 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyA_2) @[NumGuess.scala 32:29]
    reg regVerifyA_3 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyA_3) @[NumGuess.scala 32:29]
    reg regVerifyB_0 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_0) @[NumGuess.scala 33:29]
    reg regVerifyB_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_1) @[NumGuess.scala 33:29]
    reg regVerifyB_2 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_2) @[NumGuess.scala 33:29]
    reg regVerifyB_3 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_3) @[NumGuess.scala 33:29]
    reg regVerifyB_4 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_4) @[NumGuess.scala 33:29]
    reg regVerifyB_5 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_5) @[NumGuess.scala 33:29]
    reg regVerifyB_6 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_6) @[NumGuess.scala 33:29]
    reg regVerifyB_7 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_7) @[NumGuess.scala 33:29]
    reg regVerifyB_8 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_8) @[NumGuess.scala 33:29]
    reg regVerifyB_9 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_9) @[NumGuess.scala 33:29]
    reg regVerifyB_10 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_10) @[NumGuess.scala 33:29]
    reg regVerifyB_11 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), regVerifyB_11) @[NumGuess.scala 33:29]
    reg regGoWait : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoWait) @[NumGuess.scala 35:28]
    reg regGoVerifierA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoVerifierA) @[NumGuess.scala 36:33]
    reg regGoVerifierB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoVerifierB) @[NumGuess.scala 37:33]
    reg regGoAnsCal : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoAnsCal) @[NumGuess.scala 38:30]
    reg regGoOutput : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoOutput) @[NumGuess.scala 39:30]
    reg regGoReset : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regGoReset) @[NumGuess.scala 40:29]
    node _T = eq(UInt<4>("h0"), state) @[Conditional.scala 37:30]
    node _T_1 = eq(io_gen, UInt<1>("h1")) @[NumGuess.scala 56:25]
    node _GEN_0 = mux(_T_1, UInt<4>("h1"), state) @[NumGuess.scala 56:36 NumGuess.scala 56:43 NumGuess.scala 24:24]
    node _T_2 = eq(UInt<4>("h1"), state) @[Conditional.scala 37:30]
    node _T_3 = eq(regGoWait, UInt<1>("h1")) @[NumGuess.scala 59:28]
    node _GEN_1 = mux(_T_3, UInt<4>("h2"), state) @[NumGuess.scala 59:39 NumGuess.scala 59:46 NumGuess.scala 24:24]
    node _T_4 = eq(UInt<4>("h2"), state) @[Conditional.scala 37:30]
    node _T_5 = eq(prng.io_ready, UInt<1>("h1")) @[NumGuess.scala 62:32]
    node _GEN_2 = mux(_T_5, UInt<4>("h4"), state) @[NumGuess.scala 62:43 NumGuess.scala 62:50 NumGuess.scala 24:24]
    node _T_6 = eq(UInt<4>("h4"), state) @[Conditional.scala 37:30]
    node _GEN_3 = mux(io_ready, UInt<4>("h3"), state) @[NumGuess.scala 65:27 NumGuess.scala 65:34 NumGuess.scala 24:24]
    node _T_7 = eq(UInt<4>("h3"), state) @[Conditional.scala 37:30]
    node _GEN_4 = mux(regGoVerifierB, UInt<4>("h5"), state) @[NumGuess.scala 68:33 NumGuess.scala 68:40 NumGuess.scala 24:24]
    node _T_8 = eq(UInt<4>("h5"), state) @[Conditional.scala 37:30]
    node _GEN_5 = mux(regGoVerifierB, UInt<4>("h6"), state) @[NumGuess.scala 71:33 NumGuess.scala 71:40 NumGuess.scala 24:24]
    node _T_9 = eq(UInt<4>("h6"), state) @[Conditional.scala 37:30]
    node _GEN_6 = mux(regGoAnsCal, UInt<4>("h7"), state) @[NumGuess.scala 74:30 NumGuess.scala 74:37 NumGuess.scala 24:24]
    node _T_10 = eq(UInt<4>("h7"), state) @[Conditional.scala 37:30]
    node _GEN_7 = mux(regGoOutput, UInt<4>("h8"), state) @[NumGuess.scala 77:30 NumGuess.scala 77:37 NumGuess.scala 24:24]
    node _T_11 = eq(UInt<4>("h8"), state) @[Conditional.scala 37:30]
    node _T_12 = eq(UInt<4>("h9"), state) @[Conditional.scala 37:30]
    node _GEN_8 = mux(_T_12, UInt<4>("h3"), state) @[Conditional.scala 39:67 NumGuess.scala 83:19 NumGuess.scala 24:24]
    node _GEN_9 = mux(_T_11, UInt<4>("h9"), _GEN_8) @[Conditional.scala 39:67 NumGuess.scala 80:19]
    node _GEN_10 = mux(_T_10, _GEN_7, _GEN_9) @[Conditional.scala 39:67]
    node _GEN_11 = mux(_T_9, _GEN_6, _GEN_10) @[Conditional.scala 39:67]
    node _GEN_12 = mux(_T_8, _GEN_5, _GEN_11) @[Conditional.scala 39:67]
    node _GEN_13 = mux(_T_7, _GEN_4, _GEN_12) @[Conditional.scala 39:67]
    node _GEN_14 = mux(_T_6, _GEN_3, _GEN_13) @[Conditional.scala 39:67]
    node _GEN_15 = mux(_T_4, _GEN_2, _GEN_14) @[Conditional.scala 39:67]
    node _GEN_16 = mux(_T_2, _GEN_1, _GEN_15) @[Conditional.scala 39:67]
    node _GEN_17 = mux(_T, _GEN_0, _GEN_16) @[Conditional.scala 40:58]
    node _T_13 = eq(state, UInt<4>("h0")) @[NumGuess.scala 88:16]
    node _GEN_18 = mux(_T_13, UInt<1>("h0"), UInt<1>("h0")) @[NumGuess.scala 88:26 NumGuess.scala 89:18 NumGuess.scala 47:15]
    node _T_14 = eq(state, UInt<4>("h1")) @[NumGuess.scala 91:16]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[NumGuess.scala 93:29]
    node _GEN_19 = mux(_T_14, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 91:25 NumGuess.scala 92:21 NumGuess.scala 51:17]
    node _GEN_20 = mux(_T_14, REG, regGoWait) @[NumGuess.scala 91:25 NumGuess.scala 93:19 NumGuess.scala 35:28]
    node _T_15 = eq(state, UInt<4>("h2")) @[NumGuess.scala 95:16]
    node _GEN_21 = mux(_T_15, UInt<1>("h0"), _GEN_20) @[NumGuess.scala 95:26 NumGuess.scala 96:19]
    node _T_16 = eq(state, UInt<4>("h4")) @[NumGuess.scala 98:16]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[NumGuess.scala 107:28]
    node _GEN_22 = mux(_T_16, prng.io_puzzle_0, UInt<4>("h0")) @[NumGuess.scala 98:31 NumGuess.scala 99:22 NumGuess.scala 43:18]
    node _GEN_23 = mux(_T_16, prng.io_puzzle_1, UInt<4>("h0")) @[NumGuess.scala 98:31 NumGuess.scala 100:22 NumGuess.scala 44:18]
    node _GEN_24 = mux(_T_16, prng.io_puzzle_2, UInt<4>("h0")) @[NumGuess.scala 98:31 NumGuess.scala 101:22 NumGuess.scala 45:18]
    node _GEN_25 = mux(_T_16, prng.io_puzzle_3, UInt<4>("h0")) @[NumGuess.scala 98:31 NumGuess.scala 102:22 NumGuess.scala 46:18]
    node _GEN_26 = mux(_T_16, prng.io_puzzle_0, puzzleNums_0) @[NumGuess.scala 98:31 NumGuess.scala 103:23 NumGuess.scala 29:29]
    node _GEN_27 = mux(_T_16, prng.io_puzzle_1, puzzleNums_1) @[NumGuess.scala 98:31 NumGuess.scala 104:23 NumGuess.scala 29:29]
    node _GEN_28 = mux(_T_16, prng.io_puzzle_2, puzzleNums_2) @[NumGuess.scala 98:31 NumGuess.scala 105:23 NumGuess.scala 29:29]
    node _GEN_29 = mux(_T_16, prng.io_puzzle_3, puzzleNums_3) @[NumGuess.scala 98:31 NumGuess.scala 106:23 NumGuess.scala 29:29]
    node _GEN_30 = mux(_T_16, REG_1, _GEN_18) @[NumGuess.scala 98:31 NumGuess.scala 107:18]
    node _T_17 = eq(state, UInt<4>("h3")) @[NumGuess.scala 109:16]
    node _T_18 = bits(io_guess, 3, 0) @[NumGuess.scala 110:28]
    node _T_19 = bits(io_guess, 7, 4) @[NumGuess.scala 111:28]
    node _T_20 = bits(io_guess, 11, 8) @[NumGuess.scala 112:28]
    node _T_21 = bits(io_guess, 15, 12) @[NumGuess.scala 113:28]
    reg REG_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_2) @[NumGuess.scala 114:34]
    node _GEN_31 = mux(_T_17, _T_18, nums_0) @[NumGuess.scala 109:27 NumGuess.scala 110:17 NumGuess.scala 28:23]
    node _GEN_32 = mux(_T_17, _T_19, nums_1) @[NumGuess.scala 109:27 NumGuess.scala 111:17 NumGuess.scala 28:23]
    node _GEN_33 = mux(_T_17, _T_20, nums_2) @[NumGuess.scala 109:27 NumGuess.scala 112:17 NumGuess.scala 28:23]
    node _GEN_34 = mux(_T_17, _T_21, nums_3) @[NumGuess.scala 109:27 NumGuess.scala 113:17 NumGuess.scala 28:23]
    node _GEN_35 = mux(_T_17, REG_2, regGoVerifierA) @[NumGuess.scala 109:27 NumGuess.scala 114:24 NumGuess.scala 36:33]
    node _T_22 = eq(state, UInt<4>("h5")) @[NumGuess.scala 116:16]
    node _T_23 = eq(puzzleNums_0, nums_0) @[NumGuess.scala 119:44]
    node _T_24 = mux(_T_23, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 119:29]
    node _T_25 = eq(puzzleNums_1, nums_1) @[NumGuess.scala 120:44]
    node _T_26 = mux(_T_25, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 120:29]
    node _T_27 = eq(puzzleNums_2, nums_2) @[NumGuess.scala 121:44]
    node _T_28 = mux(_T_27, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 121:29]
    node _T_29 = eq(puzzleNums_3, nums_3) @[NumGuess.scala 122:44]
    node _T_30 = mux(_T_29, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 122:29]
    reg REG_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_3) @[NumGuess.scala 123:34]
    node _GEN_36 = mux(_T_22, UInt<1>("h0"), _GEN_35) @[NumGuess.scala 116:31 NumGuess.scala 117:24]
    node _GEN_37 = mux(_T_22, _T_24, regVerifyA_0) @[NumGuess.scala 116:31 NumGuess.scala 119:23 NumGuess.scala 32:29]
    node _GEN_38 = mux(_T_22, _T_26, regVerifyA_1) @[NumGuess.scala 116:31 NumGuess.scala 120:23 NumGuess.scala 32:29]
    node _GEN_39 = mux(_T_22, _T_28, regVerifyA_2) @[NumGuess.scala 116:31 NumGuess.scala 121:23 NumGuess.scala 32:29]
    node _GEN_40 = mux(_T_22, _T_30, regVerifyA_3) @[NumGuess.scala 116:31 NumGuess.scala 122:23 NumGuess.scala 32:29]
    node _GEN_41 = mux(_T_22, REG_3, regGoVerifierB) @[NumGuess.scala 116:31 NumGuess.scala 123:24 NumGuess.scala 37:33]
    node _T_31 = eq(state, UInt<4>("h6")) @[NumGuess.scala 125:16]
    node _T_32 = eq(puzzleNums_0, nums_1) @[NumGuess.scala 128:44]
    node _T_33 = mux(_T_32, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 128:29]
    node _T_34 = eq(puzzleNums_0, nums_2) @[NumGuess.scala 129:44]
    node _T_35 = mux(_T_34, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 129:29]
    node _T_36 = eq(puzzleNums_0, nums_3) @[NumGuess.scala 130:44]
    node _T_37 = mux(_T_36, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 130:29]
    node _T_38 = eq(puzzleNums_1, nums_0) @[NumGuess.scala 131:44]
    node _T_39 = mux(_T_38, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 131:29]
    node _T_40 = eq(puzzleNums_1, nums_2) @[NumGuess.scala 132:44]
    node _T_41 = mux(_T_40, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 132:29]
    node _T_42 = eq(puzzleNums_1, nums_3) @[NumGuess.scala 133:44]
    node _T_43 = mux(_T_42, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 133:29]
    node _T_44 = eq(puzzleNums_2, nums_0) @[NumGuess.scala 134:44]
    node _T_45 = mux(_T_44, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 134:29]
    node _T_46 = eq(puzzleNums_2, nums_1) @[NumGuess.scala 135:44]
    node _T_47 = mux(_T_46, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 135:29]
    node _T_48 = eq(puzzleNums_2, nums_3) @[NumGuess.scala 136:44]
    node _T_49 = mux(_T_48, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 136:29]
    node _T_50 = eq(puzzleNums_3, nums_0) @[NumGuess.scala 137:44]
    node _T_51 = mux(_T_50, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 137:29]
    node _T_52 = eq(puzzleNums_3, nums_1) @[NumGuess.scala 138:45]
    node _T_53 = mux(_T_52, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 138:30]
    node _T_54 = eq(puzzleNums_3, nums_2) @[NumGuess.scala 139:45]
    node _T_55 = mux(_T_54, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 139:30]
    reg REG_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_4) @[NumGuess.scala 142:31]
    node _GEN_42 = mux(_T_31, UInt<1>("h0"), _GEN_41) @[NumGuess.scala 125:31 NumGuess.scala 126:24]
    node _GEN_43 = mux(_T_31, _T_33, regVerifyB_0) @[NumGuess.scala 125:31 NumGuess.scala 128:23 NumGuess.scala 33:29]
    node _GEN_44 = mux(_T_31, _T_35, regVerifyB_1) @[NumGuess.scala 125:31 NumGuess.scala 129:23 NumGuess.scala 33:29]
    node _GEN_45 = mux(_T_31, _T_37, regVerifyB_2) @[NumGuess.scala 125:31 NumGuess.scala 130:23 NumGuess.scala 33:29]
    node _GEN_46 = mux(_T_31, _T_39, regVerifyB_3) @[NumGuess.scala 125:31 NumGuess.scala 131:23 NumGuess.scala 33:29]
    node _GEN_47 = mux(_T_31, _T_41, regVerifyB_4) @[NumGuess.scala 125:31 NumGuess.scala 132:23 NumGuess.scala 33:29]
    node _GEN_48 = mux(_T_31, _T_43, regVerifyB_5) @[NumGuess.scala 125:31 NumGuess.scala 133:23 NumGuess.scala 33:29]
    node _GEN_49 = mux(_T_31, _T_45, regVerifyB_6) @[NumGuess.scala 125:31 NumGuess.scala 134:23 NumGuess.scala 33:29]
    node _GEN_50 = mux(_T_31, _T_47, regVerifyB_7) @[NumGuess.scala 125:31 NumGuess.scala 135:23 NumGuess.scala 33:29]
    node _GEN_51 = mux(_T_31, _T_49, regVerifyB_8) @[NumGuess.scala 125:31 NumGuess.scala 136:23 NumGuess.scala 33:29]
    node _GEN_52 = mux(_T_31, _T_51, regVerifyB_9) @[NumGuess.scala 125:31 NumGuess.scala 137:23 NumGuess.scala 33:29]
    node _GEN_53 = mux(_T_31, _T_53, regVerifyB_10) @[NumGuess.scala 125:31 NumGuess.scala 138:24 NumGuess.scala 33:29]
    node _GEN_54 = mux(_T_31, _T_55, regVerifyB_11) @[NumGuess.scala 125:31 NumGuess.scala 139:24 NumGuess.scala 33:29]
    node _GEN_55 = mux(_T_31, UInt<1>("h0"), cntA) @[NumGuess.scala 125:31 NumGuess.scala 140:14 NumGuess.scala 30:23]
    node _GEN_56 = mux(_T_31, UInt<1>("h0"), cntB) @[NumGuess.scala 125:31 NumGuess.scala 141:14 NumGuess.scala 31:23]
    node _GEN_57 = mux(_T_31, REG_4, regGoAnsCal) @[NumGuess.scala 125:31 NumGuess.scala 142:21 NumGuess.scala 38:30]
    node _T_56 = eq(state, UInt<4>("h7")) @[NumGuess.scala 144:16]
    node _T_57 = add(regVerifyA_0, regVerifyA_1) @[NumGuess.scala 146:31]
    node _T_58 = tail(_T_57, 1) @[NumGuess.scala 146:31]
    node _T_59 = add(_T_58, regVerifyA_2) @[NumGuess.scala 146:47]
    node _T_60 = tail(_T_59, 1) @[NumGuess.scala 146:47]
    node _T_61 = add(_T_60, regVerifyA_3) @[NumGuess.scala 146:63]
    node _T_62 = tail(_T_61, 1) @[NumGuess.scala 146:63]
    node _T_63 = add(regVerifyB_0, regVerifyB_1) @[NumGuess.scala 147:31]
    node _T_64 = tail(_T_63, 1) @[NumGuess.scala 147:31]
    node _T_65 = add(_T_64, regVerifyB_2) @[NumGuess.scala 147:47]
    node _T_66 = tail(_T_65, 1) @[NumGuess.scala 147:47]
    node _T_67 = add(_T_66, regVerifyB_3) @[NumGuess.scala 147:63]
    node _T_68 = tail(_T_67, 1) @[NumGuess.scala 147:63]
    node _T_69 = add(_T_68, regVerifyB_4) @[NumGuess.scala 147:79]
    node _T_70 = tail(_T_69, 1) @[NumGuess.scala 147:79]
    node _T_71 = add(_T_70, regVerifyB_5) @[NumGuess.scala 147:95]
    node _T_72 = tail(_T_71, 1) @[NumGuess.scala 147:95]
    node _T_73 = add(_T_72, regVerifyB_6) @[NumGuess.scala 147:111]
    node _T_74 = tail(_T_73, 1) @[NumGuess.scala 147:111]
    node _T_75 = add(_T_74, regVerifyB_7) @[NumGuess.scala 147:127]
    node _T_76 = tail(_T_75, 1) @[NumGuess.scala 147:127]
    node _T_77 = add(_T_76, regVerifyB_8) @[NumGuess.scala 147:143]
    node _T_78 = tail(_T_77, 1) @[NumGuess.scala 147:143]
    node _T_79 = add(_T_78, regVerifyB_9) @[NumGuess.scala 147:159]
    node _T_80 = tail(_T_79, 1) @[NumGuess.scala 147:159]
    node _T_81 = add(_T_80, regVerifyB_10) @[NumGuess.scala 147:175]
    node _T_82 = tail(_T_81, 1) @[NumGuess.scala 147:175]
    node _T_83 = add(_T_82, regVerifyB_11) @[NumGuess.scala 147:192]
    node _T_84 = tail(_T_83, 1) @[NumGuess.scala 147:192]
    reg REG_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_5) @[NumGuess.scala 148:31]
    node _GEN_58 = mux(_T_56, UInt<1>("h0"), _GEN_57) @[NumGuess.scala 144:31 NumGuess.scala 145:21]
    node _GEN_59 = mux(_T_56, _T_62, _GEN_55) @[NumGuess.scala 144:31 NumGuess.scala 146:14]
    node _GEN_60 = mux(_T_56, _T_84, _GEN_56) @[NumGuess.scala 144:31 NumGuess.scala 147:14]
    node _GEN_61 = mux(_T_56, REG_5, regGoOutput) @[NumGuess.scala 144:31 NumGuess.scala 148:21 NumGuess.scala 39:30]
    node _T_85 = eq(state, UInt<4>("h8")) @[NumGuess.scala 150:16]
    node _GEN_62 = mux(_T_85, UInt<1>("h0"), _GEN_61) @[NumGuess.scala 150:28 NumGuess.scala 151:21]
    node _GEN_63 = mux(_T_85, UInt<1>("h1"), UInt<1>("h0")) @[NumGuess.scala 150:28 NumGuess.scala 152:20 NumGuess.scala 48:17]
    node _GEN_64 = mux(_T_85, cntA, UInt<1>("h0")) @[NumGuess.scala 150:28 NumGuess.scala 153:14 NumGuess.scala 49:15]
    node _GEN_65 = mux(_T_85, cntB, UInt<1>("h0")) @[NumGuess.scala 150:28 NumGuess.scala 154:14 NumGuess.scala 50:15]
    node _GEN_66 = mux(_T_85, UInt<1>("h0"), _GEN_31) @[NumGuess.scala 150:28 NumGuess.scala 155:17]
    node _GEN_67 = mux(_T_85, UInt<1>("h0"), _GEN_32) @[NumGuess.scala 150:28 NumGuess.scala 156:17]
    node _GEN_68 = mux(_T_85, UInt<1>("h0"), _GEN_33) @[NumGuess.scala 150:28 NumGuess.scala 157:17]
    node _GEN_69 = mux(_T_85, UInt<1>("h0"), _GEN_34) @[NumGuess.scala 150:28 NumGuess.scala 158:17]
    node _T_86 = eq(state, UInt<4>("h9")) @[NumGuess.scala 160:16]
    node _GEN_70 = mux(_T_86, UInt<1>("h0"), _GEN_63) @[NumGuess.scala 160:29 NumGuess.scala 161:20]
    node _GEN_71 = mux(_T_86, cntA, _GEN_64) @[NumGuess.scala 160:29 NumGuess.scala 162:14]
    node _GEN_72 = mux(_T_86, cntB, _GEN_65) @[NumGuess.scala 160:29 NumGuess.scala 163:14]
    node _WIRE__0 = UInt<4>("h0") @[NumGuess.scala 28:31 NumGuess.scala 28:31]
    node _WIRE__1 = UInt<4>("h0") @[NumGuess.scala 28:31 NumGuess.scala 28:31]
    node _WIRE__2 = UInt<4>("h0") @[NumGuess.scala 28:31 NumGuess.scala 28:31]
    node _WIRE__3 = UInt<4>("h0") @[NumGuess.scala 28:31 NumGuess.scala 28:31]
    node _WIRE_1_0 = UInt<4>("h0") @[NumGuess.scala 29:37 NumGuess.scala 29:37]
    node _WIRE_1_1 = UInt<4>("h0") @[NumGuess.scala 29:37 NumGuess.scala 29:37]
    node _WIRE_1_2 = UInt<4>("h0") @[NumGuess.scala 29:37 NumGuess.scala 29:37]
    node _WIRE_1_3 = UInt<4>("h0") @[NumGuess.scala 29:37 NumGuess.scala 29:37]
    node _WIRE_2_0 = UInt<3>("h0") @[NumGuess.scala 32:37 NumGuess.scala 32:37]
    node _WIRE_2_1 = UInt<3>("h0") @[NumGuess.scala 32:37 NumGuess.scala 32:37]
    node _WIRE_2_2 = UInt<3>("h0") @[NumGuess.scala 32:37 NumGuess.scala 32:37]
    node _WIRE_2_3 = UInt<3>("h0") @[NumGuess.scala 32:37 NumGuess.scala 32:37]
    node _WIRE_3_0 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_1 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_2 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_3 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_4 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_5 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_6 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_7 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_8 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_9 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_10 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    node _WIRE_3_11 = UInt<3>("h0") @[NumGuess.scala 33:37 NumGuess.scala 33:37]
    io_puzzle_0 <= _GEN_22
    io_puzzle_1 <= _GEN_23
    io_puzzle_2 <= _GEN_24
    io_puzzle_3 <= _GEN_25
    io_ready <= _GEN_30
    io_g_valid <= _GEN_70
    io_A <= _GEN_71
    io_B <= _GEN_72
    state <= mux(reset, UInt<4>("h0"), _GEN_17) @[NumGuess.scala 24:24 NumGuess.scala 24:24]
    prng.clock <= clock
    prng.reset <= reset
    prng.io_gen <= _GEN_19
    nums_0 <= mux(reset, _WIRE__0, _GEN_66) @[NumGuess.scala 28:23 NumGuess.scala 28:23]
    nums_1 <= mux(reset, _WIRE__1, _GEN_67) @[NumGuess.scala 28:23 NumGuess.scala 28:23]
    nums_2 <= mux(reset, _WIRE__2, _GEN_68) @[NumGuess.scala 28:23 NumGuess.scala 28:23]
    nums_3 <= mux(reset, _WIRE__3, _GEN_69) @[NumGuess.scala 28:23 NumGuess.scala 28:23]
    puzzleNums_0 <= mux(reset, _WIRE_1_0, _GEN_26) @[NumGuess.scala 29:29 NumGuess.scala 29:29]
    puzzleNums_1 <= mux(reset, _WIRE_1_1, _GEN_27) @[NumGuess.scala 29:29 NumGuess.scala 29:29]
    puzzleNums_2 <= mux(reset, _WIRE_1_2, _GEN_28) @[NumGuess.scala 29:29 NumGuess.scala 29:29]
    puzzleNums_3 <= mux(reset, _WIRE_1_3, _GEN_29) @[NumGuess.scala 29:29 NumGuess.scala 29:29]
    cntA <= mux(reset, UInt<1>("h0"), _GEN_59) @[NumGuess.scala 30:23 NumGuess.scala 30:23]
    cntB <= mux(reset, UInt<1>("h0"), _GEN_60) @[NumGuess.scala 31:23 NumGuess.scala 31:23]
    regVerifyA_0 <= mux(reset, _WIRE_2_0, _GEN_37) @[NumGuess.scala 32:29 NumGuess.scala 32:29]
    regVerifyA_1 <= mux(reset, _WIRE_2_1, _GEN_38) @[NumGuess.scala 32:29 NumGuess.scala 32:29]
    regVerifyA_2 <= mux(reset, _WIRE_2_2, _GEN_39) @[NumGuess.scala 32:29 NumGuess.scala 32:29]
    regVerifyA_3 <= mux(reset, _WIRE_2_3, _GEN_40) @[NumGuess.scala 32:29 NumGuess.scala 32:29]
    regVerifyB_0 <= mux(reset, _WIRE_3_0, _GEN_43) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_1 <= mux(reset, _WIRE_3_1, _GEN_44) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_2 <= mux(reset, _WIRE_3_2, _GEN_45) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_3 <= mux(reset, _WIRE_3_3, _GEN_46) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_4 <= mux(reset, _WIRE_3_4, _GEN_47) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_5 <= mux(reset, _WIRE_3_5, _GEN_48) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_6 <= mux(reset, _WIRE_3_6, _GEN_49) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_7 <= mux(reset, _WIRE_3_7, _GEN_50) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_8 <= mux(reset, _WIRE_3_8, _GEN_51) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_9 <= mux(reset, _WIRE_3_9, _GEN_52) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_10 <= mux(reset, _WIRE_3_10, _GEN_53) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regVerifyB_11 <= mux(reset, _WIRE_3_11, _GEN_54) @[NumGuess.scala 33:29 NumGuess.scala 33:29]
    regGoWait <= mux(reset, UInt<1>("h0"), _GEN_21) @[NumGuess.scala 35:28 NumGuess.scala 35:28]
    regGoVerifierA <= mux(reset, UInt<1>("h0"), _GEN_36) @[NumGuess.scala 36:33 NumGuess.scala 36:33]
    regGoVerifierB <= mux(reset, UInt<1>("h0"), _GEN_42) @[NumGuess.scala 37:33 NumGuess.scala 37:33]
    regGoAnsCal <= mux(reset, UInt<1>("h0"), _GEN_58) @[NumGuess.scala 38:30 NumGuess.scala 38:30]
    regGoOutput <= mux(reset, UInt<1>("h0"), _GEN_62) @[NumGuess.scala 39:30 NumGuess.scala 39:30]
    regGoReset <= mux(reset, UInt<1>("h0"), regGoReset) @[NumGuess.scala 40:29 NumGuess.scala 40:29 NumGuess.scala 40:29]
    REG <= UInt<1>("h1") @[NumGuess.scala 93:29]
    REG_1 <= UInt<1>("h1") @[NumGuess.scala 107:28]
    REG_2 <= UInt<1>("h1") @[NumGuess.scala 114:34]
    REG_3 <= UInt<1>("h1") @[NumGuess.scala 123:34]
    REG_4 <= UInt<1>("h1") @[NumGuess.scala 142:31]
    REG_5 <= UInt<1>("h1") @[NumGuess.scala 148:31]
