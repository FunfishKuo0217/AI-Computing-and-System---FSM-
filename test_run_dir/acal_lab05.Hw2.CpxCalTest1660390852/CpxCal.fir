circuit CpxCal :
  module CpxCal :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip key_in : UInt<4>, value : { valid : UInt<1>, bits : UInt<32>}}

    wire operator : UInt<1>
    operator <= UInt<1>("h0")
    wire num : UInt<1>
    num <= UInt<1>("h0")
    wire equal : UInt<1>
    equal <= UInt<1>("h0")
    wire lp : UInt<1>
    lp <= UInt<1>("h0")
    wire rp : UInt<1>
    rp <= UInt<1>("h0")
    wire negSign : UInt<1>
    negSign <= UInt<1>("h0")
    node _T = geq(io.key_in, UInt<4>("ha")) @[CpxCal.scala 20:27]
    node _T_1 = leq(io.key_in, UInt<4>("hc")) @[CpxCal.scala 20:48]
    node _T_2 = and(_T, _T_1) @[CpxCal.scala 20:35]
    operator <= _T_2 @[CpxCal.scala 20:14]
    node _T_3 = lt(io.key_in, UInt<4>("ha")) @[CpxCal.scala 21:22]
    num <= _T_3 @[CpxCal.scala 21:9]
    node _T_4 = eq(io.key_in, UInt<4>("hf")) @[CpxCal.scala 22:24]
    equal <= _T_4 @[CpxCal.scala 22:11]
    node _T_5 = eq(io.key_in, UInt<4>("hd")) @[CpxCal.scala 23:21]
    lp <= _T_5 @[CpxCal.scala 23:8]
    node _T_6 = eq(io.key_in, UInt<4>("he")) @[CpxCal.scala 24:21]
    rp <= _T_6 @[CpxCal.scala 24:8]
    node _T_7 = eq(io.key_in, UInt<4>("hb")) @[CpxCal.scala 25:26]
    negSign <= _T_7 @[CpxCal.scala 25:13]
    reg in_buffer : UInt, clock with :
      reset => (UInt<1>("h0"), in_buffer) @[CpxCal.scala 28:28]
    in_buffer <= io.key_in @[CpxCal.scala 28:28]
    reg src1 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 29:23]
    reg op : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[CpxCal.scala 30:21]
    reg src2 : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 31:23]
    reg regSrc : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 32:25]
    reg regSrc1Neg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 33:29]
    reg regSrc2Neg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 34:29]
    wire _WIRE : UInt<32>[50] @[CpxCal.scala 35:35]
    _WIRE[0] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[1] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[2] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[3] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[4] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[5] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[6] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[7] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[8] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[9] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[10] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[11] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[12] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[13] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[14] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[15] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[16] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[17] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[18] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[19] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[20] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[21] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[22] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[23] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[24] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[25] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[26] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[27] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[28] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[29] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[30] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[31] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[32] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[33] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[34] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[35] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[36] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[37] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[38] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[39] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[40] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[41] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[42] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[43] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[44] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[45] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[46] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[47] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[48] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    _WIRE[49] <= UInt<32>("h0") @[CpxCal.scala 35:35]
    reg regInfix : UInt<32>[50], clock with :
      reset => (reset, _WIRE) @[CpxCal.scala 35:27]
    wire _WIRE_1 : UInt<32>[50] @[CpxCal.scala 36:34]
    _WIRE_1[0] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[1] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[2] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[3] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[4] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[5] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[6] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[7] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[8] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[9] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[10] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[11] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[12] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[13] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[14] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[15] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[16] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[17] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[18] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[19] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[20] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[21] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[22] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[23] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[24] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[25] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[26] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[27] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[28] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[29] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[30] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[31] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[32] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[33] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[34] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[35] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[36] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[37] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[38] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[39] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[40] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[41] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[42] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[43] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[44] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[45] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[46] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[47] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[48] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    _WIRE_1[49] <= UInt<32>("h0") @[CpxCal.scala 36:34]
    reg regPost : UInt<32>[50], clock with :
      reset => (reset, _WIRE_1) @[CpxCal.scala 36:26]
    wire _WIRE_2 : UInt<32>[50] @[CpxCal.scala 37:32]
    _WIRE_2[0] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[1] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[2] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[3] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[4] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[5] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[6] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[7] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[8] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[9] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[10] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[11] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[12] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[13] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[14] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[15] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[16] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[17] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[18] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[19] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[20] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[21] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[22] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[23] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[24] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[25] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[26] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[27] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[28] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[29] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[30] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[31] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[32] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[33] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[34] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[35] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[36] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[37] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[38] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[39] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[40] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[41] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[42] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[43] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[44] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[45] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[46] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[47] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[48] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    _WIRE_2[49] <= UInt<32>("h0") @[CpxCal.scala 37:32]
    reg regOp : UInt<32>[50], clock with :
      reset => (reset, _WIRE_2) @[CpxCal.scala 37:24]
    reg regItemCnt : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 38:29]
    reg regRP_wait : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 39:29]
    reg regIn2Post_done : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 40:34]
    reg regIn2Post_idx : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 41:33]
    reg regPost_idx : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 42:30]
    wire _WIRE_3 : UInt<32>[50] @[CpxCal.scala 43:36]
    _WIRE_3[0] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[1] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[2] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[3] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[4] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[5] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[6] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[7] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[8] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[9] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[10] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[11] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[12] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[13] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[14] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[15] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[16] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[17] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[18] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[19] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[20] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[21] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[22] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[23] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[24] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[25] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[26] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[27] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[28] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[29] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[30] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[31] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[32] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[33] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[34] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[35] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[36] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[37] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[38] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[39] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[40] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[41] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[42] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[43] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[44] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[45] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[46] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[47] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[48] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    _WIRE_3[49] <= UInt<32>("h0") @[CpxCal.scala 43:36]
    reg regPostOp : UInt<32>[50], clock with :
      reset => (reset, _WIRE_3) @[CpxCal.scala 43:28]
    reg regEva_idx : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 44:29]
    reg regCal_done : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CpxCal.scala 45:30]
    reg Try : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 46:22]
    reg state : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[CpxCal.scala 53:24]
    cmem stack_mem : UInt<32> [50] @[CpxCal.scala 56:24]
    reg sp : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 57:21]
    cmem stack_eva : UInt<32> [50] @[CpxCal.scala 58:24]
    reg sp_eva : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[CpxCal.scala 59:25]
    node _T_8 = eq(UInt<4>("h0"), state) @[Conditional.scala 37:30]
    when _T_8 : @[Conditional.scala 40:58]
      when lp : @[CpxCal.scala 64:21]
        state <= UInt<4>("h5") @[CpxCal.scala 64:29]
      else :
        state <= UInt<4>("h1") @[CpxCal.scala 65:32]
    else :
      node _T_9 = eq(UInt<4>("h1"), state) @[Conditional.scala 37:30]
      when _T_9 : @[Conditional.scala 39:67]
        when rp : @[CpxCal.scala 68:21]
          state <= UInt<4>("hb") @[CpxCal.scala 68:29]
        else :
          when equal : @[CpxCal.scala 69:29]
            state <= UInt<4>("h4") @[CpxCal.scala 69:36]
          else :
            when operator : @[CpxCal.scala 70:33]
              state <= UInt<4>("h2") @[CpxCal.scala 70:40]
      else :
        node _T_10 = eq(UInt<4>("h5"), state) @[Conditional.scala 37:30]
        when _T_10 : @[Conditional.scala 39:67]
          when num : @[CpxCal.scala 74:22]
            node _T_11 = bits(regItemCnt, 5, 0)
            regInfix[_T_11] <= UInt<4>("hd") @[CpxCal.scala 76:38]
            node _T_12 = bits(regItemCnt, 5, 0)
            regOp[_T_12] <= UInt<1>("h1") @[CpxCal.scala 77:35]
            node _T_13 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 78:42]
            node _T_14 = tail(_T_13, 1) @[CpxCal.scala 78:42]
            regItemCnt <= _T_14 @[CpxCal.scala 78:28]
            node _T_15 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 79:30]
            node _T_16 = mux(_T_15, UInt<4>("h1"), UInt<4>("h3")) @[CpxCal.scala 79:29]
            state <= _T_16 @[CpxCal.scala 79:23]
          else :
            when lp : @[CpxCal.scala 81:26]
              node _T_17 = bits(regItemCnt, 5, 0)
              regInfix[_T_17] <= UInt<4>("hd") @[CpxCal.scala 83:38]
              node _T_18 = bits(regItemCnt, 5, 0)
              regOp[_T_18] <= UInt<1>("h1") @[CpxCal.scala 84:35]
              node _T_19 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 85:42]
              node _T_20 = tail(_T_19, 1) @[CpxCal.scala 85:42]
              regItemCnt <= _T_20 @[CpxCal.scala 85:28]
              state <= UInt<4>("h5") @[CpxCal.scala 86:23]
            else :
              when negSign : @[CpxCal.scala 88:31]
                state <= UInt<4>("ha") @[CpxCal.scala 89:23]
        else :
          node _T_21 = eq(UInt<4>("ha"), state) @[Conditional.scala 37:30]
          when _T_21 : @[Conditional.scala 39:67]
            when num : @[CpxCal.scala 93:22]
              node _T_22 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 93:37]
              node _T_23 = mux(_T_22, UInt<4>("h1"), UInt<4>("h3")) @[CpxCal.scala 93:36]
              state <= _T_23 @[CpxCal.scala 93:30]
          else :
            node _T_24 = eq(UInt<4>("hb"), state) @[Conditional.scala 37:30]
            when _T_24 : @[Conditional.scala 39:67]
              when equal : @[CpxCal.scala 96:24]
                state <= UInt<4>("h4") @[CpxCal.scala 96:31]
              else :
                when operator : @[CpxCal.scala 97:32]
                  state <= UInt<4>("h2") @[CpxCal.scala 97:38]
                else :
                  when rp : @[CpxCal.scala 98:26]
                    regRP_wait <= UInt<1>("h1") @[CpxCal.scala 99:28]
                    state <= UInt<4>("h6") @[CpxCal.scala 100:23]
            else :
              node _T_25 = eq(UInt<4>("h2"), state) @[Conditional.scala 37:30]
              when _T_25 : @[Conditional.scala 39:67]
                when num : @[CpxCal.scala 104:23]
                  state <= UInt<4>("h3") @[CpxCal.scala 104:30]
                else :
                  when lp : @[CpxCal.scala 105:27]
                    state <= UInt<4>("h5") @[CpxCal.scala 105:34]
              else :
                node _T_26 = eq(UInt<4>("h3"), state) @[Conditional.scala 37:30]
                when _T_26 : @[Conditional.scala 39:67]
                  when operator : @[CpxCal.scala 108:28]
                    state <= UInt<4>("h2") @[CpxCal.scala 108:35]
                  else :
                    when equal : @[CpxCal.scala 109:30]
                      state <= UInt<4>("h4") @[CpxCal.scala 109:37]
                    else :
                      when rp : @[CpxCal.scala 110:27]
                        when regSrc2Neg : @[CpxCal.scala 112:33]
                          state <= UInt<4>("hb") @[CpxCal.scala 112:41]
                        else :
                          state <= UInt<4>("h6") @[CpxCal.scala 114:27]
                          regRP_wait <= UInt<1>("h1") @[CpxCal.scala 115:32]
                else :
                  node _T_27 = eq(UInt<4>("h6"), state) @[Conditional.scala 37:30]
                  when _T_27 : @[Conditional.scala 39:67]
                    when operator : @[CpxCal.scala 120:27]
                      state <= UInt<4>("h2") @[CpxCal.scala 120:35]
                    else :
                      when rp : @[CpxCal.scala 121:26]
                        state <= UInt<4>("h6") @[CpxCal.scala 121:34]
                      else :
                        when equal : @[CpxCal.scala 122:29]
                          state <= UInt<4>("h4") @[CpxCal.scala 122:37]
                  else :
                    node _T_28 = eq(UInt<4>("h4"), state) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      state <= UInt<4>("h7") @[CpxCal.scala 124:27]
                    else :
                      node _T_29 = eq(UInt<4>("h7"), state) @[Conditional.scala 37:30]
                      when _T_29 : @[Conditional.scala 39:67]
                        when regIn2Post_done : @[CpxCal.scala 125:43]
                          state <= UInt<4>("h8") @[CpxCal.scala 125:50]
                      else :
                        node _T_30 = eq(UInt<4>("h8"), state) @[Conditional.scala 37:30]
                        when _T_30 : @[Conditional.scala 39:67]
                          when regCal_done : @[CpxCal.scala 126:36]
                            state <= UInt<4>("h9") @[CpxCal.scala 126:43]
                        else :
                          node _T_31 = eq(UInt<4>("h9"), state) @[Conditional.scala 37:30]
                          when _T_31 : @[Conditional.scala 39:67]
                            state <= UInt<4>("h0") @[CpxCal.scala 127:27]
    node _T_32 = eq(state, UInt<4>("h1")) @[CpxCal.scala 131:16]
    when _T_32 : @[CpxCal.scala 131:26]
      node _T_33 = dshl(src1, UInt<2>("h3")) @[CpxCal.scala 131:40]
      node _T_34 = dshl(src1, UInt<1>("h1")) @[CpxCal.scala 131:54]
      node _T_35 = add(_T_33, _T_34) @[CpxCal.scala 131:47]
      node _T_36 = tail(_T_35, 1) @[CpxCal.scala 131:47]
      node _T_37 = add(_T_36, in_buffer) @[CpxCal.scala 131:61]
      node _T_38 = tail(_T_37, 1) @[CpxCal.scala 131:61]
      src1 <= _T_38 @[CpxCal.scala 131:32]
    node _T_39 = eq(state, UInt<4>("h3")) @[CpxCal.scala 132:16]
    when _T_39 : @[CpxCal.scala 132:26]
      node _T_40 = dshl(src2, UInt<2>("h3")) @[CpxCal.scala 132:40]
      node _T_41 = dshl(src2, UInt<1>("h1")) @[CpxCal.scala 132:54]
      node _T_42 = add(_T_40, _T_41) @[CpxCal.scala 132:47]
      node _T_43 = tail(_T_42, 1) @[CpxCal.scala 132:47]
      node _T_44 = add(_T_43, in_buffer) @[CpxCal.scala 132:61]
      node _T_45 = tail(_T_44, 1) @[CpxCal.scala 132:61]
      src2 <= _T_45 @[CpxCal.scala 132:32]
    node _T_46 = eq(state, UInt<4>("ha")) @[CpxCal.scala 133:16]
    when _T_46 : @[CpxCal.scala 133:30]
      node _T_47 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 134:14]
      when _T_47 : @[CpxCal.scala 134:23]
        regSrc1Neg <= UInt<1>("h1") @[CpxCal.scala 134:35]
      else :
        regSrc2Neg <= UInt<1>("h1") @[CpxCal.scala 135:31]
    node _T_48 = eq(state, UInt<4>("hb")) @[CpxCal.scala 137:16]
    when _T_48 : @[CpxCal.scala 137:28]
      node _T_49 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 138:14]
      when _T_49 : @[CpxCal.scala 138:22]
        node _T_50 = not(src1) @[CpxCal.scala 139:21]
        node _T_51 = add(_T_50, UInt<1>("h1")) @[CpxCal.scala 139:27]
        node _T_52 = tail(_T_51, 1) @[CpxCal.scala 139:27]
        src1 <= _T_52 @[CpxCal.scala 139:18]
        regSrc1Neg <= UInt<1>("h0") @[CpxCal.scala 140:24]
      else :
        node _T_53 = not(src2) @[CpxCal.scala 142:21]
        node _T_54 = add(_T_53, UInt<1>("h1")) @[CpxCal.scala 142:27]
        node _T_55 = tail(_T_54, 1) @[CpxCal.scala 142:27]
        src2 <= _T_55 @[CpxCal.scala 142:18]
        regSrc2Neg <= UInt<1>("h0") @[CpxCal.scala 143:24]
    node _T_56 = eq(state, UInt<4>("h2")) @[CpxCal.scala 146:16]
    when _T_56 : @[CpxCal.scala 146:24]
      node _T_57 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 147:14]
      when _T_57 : @[CpxCal.scala 147:22]
        node _T_58 = bits(regItemCnt, 5, 0)
        regInfix[_T_58] <= src1 @[CpxCal.scala 148:34]
        node _T_59 = bits(regItemCnt, 5, 0)
        regOp[_T_59] <= UInt<1>("h0") @[CpxCal.scala 149:31]
        node _T_60 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 150:32]
        node _T_61 = tail(_T_60, 1) @[CpxCal.scala 150:32]
        node _T_62 = bits(_T_61, 5, 0)
        regInfix[_T_62] <= in_buffer @[CpxCal.scala 150:38]
        node _T_63 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 151:29]
        node _T_64 = tail(_T_63, 1) @[CpxCal.scala 151:29]
        node _T_65 = bits(_T_64, 5, 0)
        regOp[_T_65] <= UInt<1>("h1") @[CpxCal.scala 151:35]
        node _T_66 = add(regItemCnt, UInt<2>("h2")) @[CpxCal.scala 152:38]
        node _T_67 = tail(_T_66, 1) @[CpxCal.scala 152:38]
        regItemCnt <= _T_67 @[CpxCal.scala 152:24]
      when regSrc : @[CpxCal.scala 154:21]
        when regRP_wait : @[CpxCal.scala 155:29]
          node _T_68 = bits(regItemCnt, 5, 0)
          regInfix[_T_68] <= src2 @[CpxCal.scala 156:38]
          node _T_69 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 157:36]
          node _T_70 = tail(_T_69, 1) @[CpxCal.scala 157:36]
          node _T_71 = bits(_T_70, 5, 0)
          regInfix[_T_71] <= UInt<4>("he") @[CpxCal.scala 157:42]
          node _T_72 = add(regItemCnt, UInt<2>("h2")) @[CpxCal.scala 158:36]
          node _T_73 = tail(_T_72, 1) @[CpxCal.scala 158:36]
          node _T_74 = bits(_T_73, 5, 0)
          regInfix[_T_74] <= in_buffer @[CpxCal.scala 158:42]
          node _T_75 = bits(regItemCnt, 5, 0)
          regOp[_T_75] <= UInt<1>("h0") @[CpxCal.scala 160:35]
          node _T_76 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 161:33]
          node _T_77 = tail(_T_76, 1) @[CpxCal.scala 161:33]
          node _T_78 = bits(_T_77, 5, 0)
          regOp[_T_78] <= UInt<1>("h1") @[CpxCal.scala 161:39]
          node _T_79 = add(regItemCnt, UInt<2>("h2")) @[CpxCal.scala 162:33]
          node _T_80 = tail(_T_79, 1) @[CpxCal.scala 162:33]
          node _T_81 = bits(_T_80, 5, 0)
          regOp[_T_81] <= UInt<1>("h1") @[CpxCal.scala 162:39]
          node _T_82 = add(regItemCnt, UInt<2>("h3")) @[CpxCal.scala 164:42]
          node _T_83 = tail(_T_82, 1) @[CpxCal.scala 164:42]
          regItemCnt <= _T_83 @[CpxCal.scala 164:28]
          regRP_wait <= UInt<1>("h0") @[CpxCal.scala 165:28]
        else :
          node _T_84 = bits(regItemCnt, 5, 0)
          regInfix[_T_84] <= src2 @[CpxCal.scala 167:38]
          node _T_85 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 168:36]
          node _T_86 = tail(_T_85, 1) @[CpxCal.scala 168:36]
          node _T_87 = bits(_T_86, 5, 0)
          regInfix[_T_87] <= in_buffer @[CpxCal.scala 168:42]
          node _T_88 = bits(regItemCnt, 5, 0)
          regOp[_T_88] <= UInt<1>("h0") @[CpxCal.scala 170:35]
          node _T_89 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 171:33]
          node _T_90 = tail(_T_89, 1) @[CpxCal.scala 171:33]
          node _T_91 = bits(_T_90, 5, 0)
          regOp[_T_91] <= UInt<1>("h1") @[CpxCal.scala 171:39]
          node _T_92 = add(regItemCnt, UInt<2>("h2")) @[CpxCal.scala 173:42]
          node _T_93 = tail(_T_92, 1) @[CpxCal.scala 173:42]
          regItemCnt <= _T_93 @[CpxCal.scala 173:28]
        src2 <= UInt<1>("h0") @[CpxCal.scala 175:18]
      regSrc <= UInt<1>("h1") @[CpxCal.scala 177:16]
    node _T_94 = eq(state, UInt<4>("h4")) @[CpxCal.scala 179:16]
    when _T_94 : @[CpxCal.scala 179:27]
      node _T_95 = eq(regSrc, UInt<1>("h0")) @[CpxCal.scala 181:14]
      when _T_95 : @[CpxCal.scala 181:22]
        node _T_96 = bits(regItemCnt, 5, 0)
        regInfix[_T_96] <= src1 @[CpxCal.scala 182:34]
        node _T_97 = bits(regItemCnt, 5, 0)
        regOp[_T_97] <= UInt<1>("h0") @[CpxCal.scala 183:31]
      when regSrc : @[CpxCal.scala 185:21]
        node _T_98 = bits(regItemCnt, 5, 0)
        regInfix[_T_98] <= src2 @[CpxCal.scala 186:34]
        node _T_99 = bits(regItemCnt, 5, 0)
        regOp[_T_99] <= UInt<1>("h0") @[CpxCal.scala 187:31]
      node _T_100 = add(regItemCnt, UInt<1>("h1")) @[CpxCal.scala 189:34]
      node _T_101 = tail(_T_100, 1) @[CpxCal.scala 189:34]
      regItemCnt <= _T_101 @[CpxCal.scala 189:20]
      state <= UInt<4>("h7") @[CpxCal.scala 191:15]
    node _T_102 = eq(state, UInt<4>("h7")) @[CpxCal.scala 193:16]
    when _T_102 : @[CpxCal.scala 193:29]
      node _T_103 = lt(regIn2Post_idx, regItemCnt) @[CpxCal.scala 195:29]
      when _T_103 : @[CpxCal.scala 195:42]
        node _T_104 = bits(regIn2Post_idx, 5, 0)
        node _T_105 = eq(regOp[_T_104], UInt<1>("h0")) @[CpxCal.scala 197:40]
        when _T_105 : @[CpxCal.scala 197:48]
          node _T_106 = bits(regPost_idx, 5, 0)
          node _T_107 = bits(regIn2Post_idx, 5, 0)
          regPost[_T_106] <= regInfix[_T_107] @[CpxCal.scala 198:38]
          node _T_108 = bits(regPost_idx, 5, 0)
          regPostOp[_T_108] <= UInt<1>("h0") @[CpxCal.scala 199:40]
          node _T_109 = add(regPost_idx, UInt<1>("h1")) @[CpxCal.scala 200:44]
          node _T_110 = tail(_T_109, 1) @[CpxCal.scala 200:44]
          regPost_idx <= _T_110 @[CpxCal.scala 200:29]
          node _T_111 = add(regIn2Post_idx, UInt<1>("h1")) @[CpxCal.scala 201:50]
          node _T_112 = tail(_T_111, 1) @[CpxCal.scala 201:50]
          regIn2Post_idx <= _T_112 @[CpxCal.scala 201:32]
        node _T_113 = bits(regIn2Post_idx, 5, 0)
        node _T_114 = eq(regOp[_T_113], UInt<1>("h1")) @[CpxCal.scala 204:40]
        node _T_115 = bits(regIn2Post_idx, 5, 0)
        node _T_116 = eq(regInfix[_T_115], UInt<4>("hd")) @[CpxCal.scala 204:76]
        node _T_117 = and(_T_114, _T_116) @[CpxCal.scala 204:48]
        when _T_117 : @[CpxCal.scala 204:85]
          node _T_118 = bits(sp, 5, 0) @[CpxCal.scala 206:26]
          infer mport MPORT = stack_mem[_T_118], clock @[CpxCal.scala 206:26]
          MPORT <= UInt<4>("hd") @[CpxCal.scala 206:31]
          node _T_119 = add(sp, UInt<1>("h1")) @[CpxCal.scala 207:26]
          node _T_120 = tail(_T_119, 1) @[CpxCal.scala 207:26]
          sp <= _T_120 @[CpxCal.scala 207:20]
          node _T_121 = add(regIn2Post_idx, UInt<1>("h1")) @[CpxCal.scala 208:50]
          node _T_122 = tail(_T_121, 1) @[CpxCal.scala 208:50]
          regIn2Post_idx <= _T_122 @[CpxCal.scala 208:32]
        node _T_123 = bits(regIn2Post_idx, 5, 0)
        node _T_124 = eq(regOp[_T_123], UInt<1>("h1")) @[CpxCal.scala 211:40]
        node _T_125 = bits(regIn2Post_idx, 5, 0)
        node _T_126 = eq(regInfix[_T_125], UInt<4>("he")) @[CpxCal.scala 211:76]
        node _T_127 = and(_T_124, _T_126) @[CpxCal.scala 211:48]
        when _T_127 : @[CpxCal.scala 211:85]
          node _T_128 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 212:34]
          node _T_129 = tail(_T_128, 1) @[CpxCal.scala 212:34]
          node _T_130 = bits(_T_129, 5, 0) @[CpxCal.scala 212:31]
          infer mport MPORT_1 = stack_mem[_T_130], clock @[CpxCal.scala 212:31]
          node _T_131 = neq(MPORT_1, UInt<4>("hd")) @[CpxCal.scala 212:40]
          when _T_131 : @[CpxCal.scala 212:49]
            node _T_132 = bits(regPost_idx, 5, 0)
            node _T_133 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 213:57]
            node _T_134 = tail(_T_133, 1) @[CpxCal.scala 213:57]
            node _T_135 = bits(_T_134, 5, 0) @[CpxCal.scala 213:54]
            infer mport MPORT_2 = stack_mem[_T_135], clock @[CpxCal.scala 213:54]
            regPost[_T_132] <= MPORT_2 @[CpxCal.scala 213:42]
            node _T_136 = bits(regPost_idx, 5, 0)
            regPostOp[_T_136] <= UInt<1>("h1") @[CpxCal.scala 214:44]
            node _T_137 = add(regPost_idx, UInt<1>("h1")) @[CpxCal.scala 215:48]
            node _T_138 = tail(_T_137, 1) @[CpxCal.scala 215:48]
            regPost_idx <= _T_138 @[CpxCal.scala 215:33]
            node _T_139 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 216:30]
            node _T_140 = tail(_T_139, 1) @[CpxCal.scala 216:30]
            sp <= _T_140 @[CpxCal.scala 216:24]
          else :
            node _T_141 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 218:30]
            node _T_142 = tail(_T_141, 1) @[CpxCal.scala 218:30]
            sp <= _T_142 @[CpxCal.scala 218:24]
            node _T_143 = add(regIn2Post_idx, UInt<1>("h1")) @[CpxCal.scala 219:54]
            node _T_144 = tail(_T_143, 1) @[CpxCal.scala 219:54]
            regIn2Post_idx <= _T_144 @[CpxCal.scala 219:36]
        node _T_145 = bits(regIn2Post_idx, 5, 0)
        node _T_146 = eq(regOp[_T_145], UInt<1>("h1")) @[CpxCal.scala 223:40]
        node _T_147 = bits(regIn2Post_idx, 5, 0)
        node _T_148 = leq(regInfix[_T_147], UInt<4>("hc")) @[CpxCal.scala 223:76]
        node _T_149 = and(_T_146, _T_148) @[CpxCal.scala 223:48]
        when _T_149 : @[CpxCal.scala 223:84]
          node _T_150 = gt(sp, UInt<1>("h0")) @[CpxCal.scala 225:25]
          node _T_151 = bits(regIn2Post_idx, 5, 0)
          node _T_152 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 225:74]
          node _T_153 = tail(_T_152, 1) @[CpxCal.scala 225:74]
          node _T_154 = bits(_T_153, 5, 0) @[CpxCal.scala 225:71]
          infer mport MPORT_3 = stack_mem[_T_154], clock @[CpxCal.scala 225:71]
          node _T_155 = leq(regInfix[_T_151], MPORT_3) @[CpxCal.scala 225:59]
          node _T_156 = and(_T_150, _T_155) @[CpxCal.scala 225:31]
          node _T_157 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 225:95]
          node _T_158 = tail(_T_157, 1) @[CpxCal.scala 225:95]
          node _T_159 = bits(_T_158, 5, 0) @[CpxCal.scala 225:92]
          infer mport MPORT_4 = stack_mem[_T_159], clock @[CpxCal.scala 225:92]
          node _T_160 = neq(MPORT_4, UInt<4>("hd")) @[CpxCal.scala 225:101]
          node _T_161 = and(_T_156, _T_160) @[CpxCal.scala 225:80]
          when _T_161 : @[CpxCal.scala 225:110]
            node _T_162 = bits(regPost_idx, 5, 0)
            node _T_163 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 226:57]
            node _T_164 = tail(_T_163, 1) @[CpxCal.scala 226:57]
            node _T_165 = bits(_T_164, 5, 0) @[CpxCal.scala 226:54]
            infer mport MPORT_5 = stack_mem[_T_165], clock @[CpxCal.scala 226:54]
            regPost[_T_162] <= MPORT_5 @[CpxCal.scala 226:42]
            node _T_166 = bits(regPost_idx, 5, 0)
            regPostOp[_T_166] <= UInt<1>("h1") @[CpxCal.scala 227:44]
            node _T_167 = add(regPost_idx, UInt<1>("h1")) @[CpxCal.scala 228:48]
            node _T_168 = tail(_T_167, 1) @[CpxCal.scala 228:48]
            regPost_idx <= _T_168 @[CpxCal.scala 228:33]
            node _T_169 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 229:30]
            node _T_170 = tail(_T_169, 1) @[CpxCal.scala 229:30]
            sp <= _T_170 @[CpxCal.scala 229:24]
          else :
            node _T_171 = bits(sp, 5, 0) @[CpxCal.scala 232:30]
            infer mport MPORT_6 = stack_mem[_T_171], clock @[CpxCal.scala 232:30]
            node _T_172 = bits(regIn2Post_idx, 5, 0)
            MPORT_6 <= regInfix[_T_172] @[CpxCal.scala 232:35]
            node _T_173 = add(sp, UInt<1>("h1")) @[CpxCal.scala 233:30]
            node _T_174 = tail(_T_173, 1) @[CpxCal.scala 233:30]
            sp <= _T_174 @[CpxCal.scala 233:24]
            node _T_175 = add(regIn2Post_idx, UInt<1>("h1")) @[CpxCal.scala 234:54]
            node _T_176 = tail(_T_175, 1) @[CpxCal.scala 234:54]
            regIn2Post_idx <= _T_176 @[CpxCal.scala 234:36]
      else :
        node _T_177 = gt(sp, UInt<1>("h0")) @[CpxCal.scala 239:21]
        when _T_177 : @[CpxCal.scala 239:27]
          node _T_178 = bits(regPost_idx, 5, 0)
          node _T_179 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 240:53]
          node _T_180 = tail(_T_179, 1) @[CpxCal.scala 240:53]
          node _T_181 = bits(_T_180, 5, 0) @[CpxCal.scala 240:50]
          infer mport MPORT_7 = stack_mem[_T_181], clock @[CpxCal.scala 240:50]
          regPost[_T_178] <= MPORT_7 @[CpxCal.scala 240:38]
          node _T_182 = bits(regPost_idx, 5, 0)
          regPostOp[_T_182] <= UInt<1>("h1") @[CpxCal.scala 241:40]
          node _T_183 = add(regPost_idx, UInt<1>("h1")) @[CpxCal.scala 242:44]
          node _T_184 = tail(_T_183, 1) @[CpxCal.scala 242:44]
          regPost_idx <= _T_184 @[CpxCal.scala 242:29]
          node _T_185 = sub(sp, UInt<1>("h1")) @[CpxCal.scala 243:26]
          node _T_186 = tail(_T_185, 1) @[CpxCal.scala 243:26]
          sp <= _T_186 @[CpxCal.scala 243:20]
        else :
          regIn2Post_done <= UInt<1>("h1") @[CpxCal.scala 245:33]
    node _T_187 = eq(state, UInt<4>("h8")) @[CpxCal.scala 250:16]
    when _T_187 : @[CpxCal.scala 250:25]
      node _T_188 = lt(regEva_idx, regPost_idx) @[CpxCal.scala 251:25]
      when _T_188 : @[CpxCal.scala 251:39]
        node _T_189 = bits(regEva_idx, 5, 0)
        node _T_190 = eq(regPostOp[_T_189], UInt<1>("h0")) @[CpxCal.scala 254:40]
        when _T_190 : @[CpxCal.scala 254:48]
          node _T_191 = bits(sp_eva, 5, 0) @[CpxCal.scala 255:26]
          infer mport MPORT_8 = stack_eva[_T_191], clock @[CpxCal.scala 255:26]
          node _T_192 = bits(regEva_idx, 5, 0)
          MPORT_8 <= regPost[_T_192] @[CpxCal.scala 255:35]
          node _T_193 = add(sp_eva, UInt<1>("h1")) @[CpxCal.scala 256:35]
          node _T_194 = tail(_T_193, 1) @[CpxCal.scala 256:35]
          sp_eva <= _T_194 @[CpxCal.scala 256:24]
        else :
          node _T_195 = sub(sp_eva, UInt<2>("h2")) @[CpxCal.scala 259:44]
          node _T_196 = tail(_T_195, 1) @[CpxCal.scala 259:44]
          node _T_197 = bits(_T_196, 5, 0) @[CpxCal.scala 259:37]
          infer mport MPORT_9 = stack_eva[_T_197], clock @[CpxCal.scala 259:37]
          node _T_198 = sub(sp_eva, UInt<1>("h1")) @[CpxCal.scala 260:44]
          node _T_199 = tail(_T_198, 1) @[CpxCal.scala 260:44]
          node _T_200 = bits(_T_199, 5, 0) @[CpxCal.scala 260:37]
          infer mport MPORT_10 = stack_eva[_T_200], clock @[CpxCal.scala 260:37]
          node _T_201 = bits(regEva_idx, 5, 0)
          node _T_202 = eq(UInt<4>("ha"), regPost[_T_201]) @[Conditional.scala 37:30]
          when _T_202 : @[Conditional.scala 40:58]
            node _T_203 = sub(sp_eva, UInt<2>("h2")) @[CpxCal.scala 263:41]
            node _T_204 = tail(_T_203, 1) @[CpxCal.scala 263:41]
            node _T_205 = bits(_T_204, 5, 0) @[CpxCal.scala 263:34]
            infer mport MPORT_11 = stack_eva[_T_205], clock @[CpxCal.scala 263:34]
            node _T_206 = add(MPORT_9, MPORT_10) @[CpxCal.scala 263:56]
            node _T_207 = tail(_T_206, 1) @[CpxCal.scala 263:56]
            MPORT_11 <= _T_207 @[CpxCal.scala 263:47]
            node _T_208 = sub(sp_eva, UInt<1>("h1")) @[CpxCal.scala 264:41]
            node _T_209 = tail(_T_208, 1) @[CpxCal.scala 264:41]
            sp_eva <= _T_209 @[CpxCal.scala 264:32]
          else :
            node _T_210 = eq(UInt<4>("hb"), regPost[_T_201]) @[Conditional.scala 37:30]
            when _T_210 : @[Conditional.scala 39:67]
              node _T_211 = sub(sp_eva, UInt<2>("h2")) @[CpxCal.scala 267:41]
              node _T_212 = tail(_T_211, 1) @[CpxCal.scala 267:41]
              node _T_213 = bits(_T_212, 5, 0) @[CpxCal.scala 267:34]
              infer mport MPORT_12 = stack_eva[_T_213], clock @[CpxCal.scala 267:34]
              node _T_214 = sub(MPORT_9, MPORT_10) @[CpxCal.scala 267:56]
              node _T_215 = tail(_T_214, 1) @[CpxCal.scala 267:56]
              MPORT_12 <= _T_215 @[CpxCal.scala 267:47]
              node _T_216 = sub(sp_eva, UInt<1>("h1")) @[CpxCal.scala 268:41]
              node _T_217 = tail(_T_216, 1) @[CpxCal.scala 268:41]
              sp_eva <= _T_217 @[CpxCal.scala 268:32]
            else :
              node _T_218 = eq(UInt<4>("hc"), regPost[_T_201]) @[Conditional.scala 37:30]
              when _T_218 : @[Conditional.scala 39:67]
                node _T_219 = sub(sp_eva, UInt<2>("h2")) @[CpxCal.scala 271:41]
                node _T_220 = tail(_T_219, 1) @[CpxCal.scala 271:41]
                node _T_221 = bits(_T_220, 5, 0) @[CpxCal.scala 271:34]
                infer mport MPORT_13 = stack_eva[_T_221], clock @[CpxCal.scala 271:34]
                node _T_222 = mul(MPORT_9, MPORT_10) @[CpxCal.scala 271:56]
                MPORT_13 <= _T_222 @[CpxCal.scala 271:47]
                node _T_223 = sub(sp_eva, UInt<1>("h1")) @[CpxCal.scala 272:41]
                node _T_224 = tail(_T_223, 1) @[CpxCal.scala 272:41]
                sp_eva <= _T_224 @[CpxCal.scala 272:32]
      else :
        state <= UInt<4>("h9") @[CpxCal.scala 278:19]
    node _T_225 = eq(state, UInt<4>("h9")) @[CpxCal.scala 281:16]
    when _T_225 : @[CpxCal.scala 281:28]
      src1 <= UInt<1>("h0") @[CpxCal.scala 282:14]
      src2 <= UInt<1>("h0") @[CpxCal.scala 283:14]
      op <= UInt<1>("h0") @[CpxCal.scala 284:12]
      in_buffer <= UInt<1>("h0") @[CpxCal.scala 285:19]
      regSrc1Neg <= UInt<1>("h0") @[CpxCal.scala 286:20]
      regSrc2Neg <= UInt<1>("h0") @[CpxCal.scala 287:20]
      regSrc <= UInt<1>("h0") @[CpxCal.scala 288:16]
      reg REG : UInt<32>[50], clock with :
        reset => (UInt<1>("h0"), REG) @[CpxCal.scala 289:21]
      regOp[0] <= REG[0] @[CpxCal.scala 289:15]
      regOp[1] <= REG[1] @[CpxCal.scala 289:15]
      regOp[2] <= REG[2] @[CpxCal.scala 289:15]
      regOp[3] <= REG[3] @[CpxCal.scala 289:15]
      regOp[4] <= REG[4] @[CpxCal.scala 289:15]
      regOp[5] <= REG[5] @[CpxCal.scala 289:15]
      regOp[6] <= REG[6] @[CpxCal.scala 289:15]
      regOp[7] <= REG[7] @[CpxCal.scala 289:15]
      regOp[8] <= REG[8] @[CpxCal.scala 289:15]
      regOp[9] <= REG[9] @[CpxCal.scala 289:15]
      regOp[10] <= REG[10] @[CpxCal.scala 289:15]
      regOp[11] <= REG[11] @[CpxCal.scala 289:15]
      regOp[12] <= REG[12] @[CpxCal.scala 289:15]
      regOp[13] <= REG[13] @[CpxCal.scala 289:15]
      regOp[14] <= REG[14] @[CpxCal.scala 289:15]
      regOp[15] <= REG[15] @[CpxCal.scala 289:15]
      regOp[16] <= REG[16] @[CpxCal.scala 289:15]
      regOp[17] <= REG[17] @[CpxCal.scala 289:15]
      regOp[18] <= REG[18] @[CpxCal.scala 289:15]
      regOp[19] <= REG[19] @[CpxCal.scala 289:15]
      regOp[20] <= REG[20] @[CpxCal.scala 289:15]
      regOp[21] <= REG[21] @[CpxCal.scala 289:15]
      regOp[22] <= REG[22] @[CpxCal.scala 289:15]
      regOp[23] <= REG[23] @[CpxCal.scala 289:15]
      regOp[24] <= REG[24] @[CpxCal.scala 289:15]
      regOp[25] <= REG[25] @[CpxCal.scala 289:15]
      regOp[26] <= REG[26] @[CpxCal.scala 289:15]
      regOp[27] <= REG[27] @[CpxCal.scala 289:15]
      regOp[28] <= REG[28] @[CpxCal.scala 289:15]
      regOp[29] <= REG[29] @[CpxCal.scala 289:15]
      regOp[30] <= REG[30] @[CpxCal.scala 289:15]
      regOp[31] <= REG[31] @[CpxCal.scala 289:15]
      regOp[32] <= REG[32] @[CpxCal.scala 289:15]
      regOp[33] <= REG[33] @[CpxCal.scala 289:15]
      regOp[34] <= REG[34] @[CpxCal.scala 289:15]
      regOp[35] <= REG[35] @[CpxCal.scala 289:15]
      regOp[36] <= REG[36] @[CpxCal.scala 289:15]
      regOp[37] <= REG[37] @[CpxCal.scala 289:15]
      regOp[38] <= REG[38] @[CpxCal.scala 289:15]
      regOp[39] <= REG[39] @[CpxCal.scala 289:15]
      regOp[40] <= REG[40] @[CpxCal.scala 289:15]
      regOp[41] <= REG[41] @[CpxCal.scala 289:15]
      regOp[42] <= REG[42] @[CpxCal.scala 289:15]
      regOp[43] <= REG[43] @[CpxCal.scala 289:15]
      regOp[44] <= REG[44] @[CpxCal.scala 289:15]
      regOp[45] <= REG[45] @[CpxCal.scala 289:15]
      regOp[46] <= REG[46] @[CpxCal.scala 289:15]
      regOp[47] <= REG[47] @[CpxCal.scala 289:15]
      regOp[48] <= REG[48] @[CpxCal.scala 289:15]
      regOp[49] <= REG[49] @[CpxCal.scala 289:15]
      reg REG_1 : UInt<32>[50], clock with :
        reset => (UInt<1>("h0"), REG_1) @[CpxCal.scala 290:24]
      regInfix[0] <= REG_1[0] @[CpxCal.scala 290:18]
      regInfix[1] <= REG_1[1] @[CpxCal.scala 290:18]
      regInfix[2] <= REG_1[2] @[CpxCal.scala 290:18]
      regInfix[3] <= REG_1[3] @[CpxCal.scala 290:18]
      regInfix[4] <= REG_1[4] @[CpxCal.scala 290:18]
      regInfix[5] <= REG_1[5] @[CpxCal.scala 290:18]
      regInfix[6] <= REG_1[6] @[CpxCal.scala 290:18]
      regInfix[7] <= REG_1[7] @[CpxCal.scala 290:18]
      regInfix[8] <= REG_1[8] @[CpxCal.scala 290:18]
      regInfix[9] <= REG_1[9] @[CpxCal.scala 290:18]
      regInfix[10] <= REG_1[10] @[CpxCal.scala 290:18]
      regInfix[11] <= REG_1[11] @[CpxCal.scala 290:18]
      regInfix[12] <= REG_1[12] @[CpxCal.scala 290:18]
      regInfix[13] <= REG_1[13] @[CpxCal.scala 290:18]
      regInfix[14] <= REG_1[14] @[CpxCal.scala 290:18]
      regInfix[15] <= REG_1[15] @[CpxCal.scala 290:18]
      regInfix[16] <= REG_1[16] @[CpxCal.scala 290:18]
      regInfix[17] <= REG_1[17] @[CpxCal.scala 290:18]
      regInfix[18] <= REG_1[18] @[CpxCal.scala 290:18]
      regInfix[19] <= REG_1[19] @[CpxCal.scala 290:18]
      regInfix[20] <= REG_1[20] @[CpxCal.scala 290:18]
      regInfix[21] <= REG_1[21] @[CpxCal.scala 290:18]
      regInfix[22] <= REG_1[22] @[CpxCal.scala 290:18]
      regInfix[23] <= REG_1[23] @[CpxCal.scala 290:18]
      regInfix[24] <= REG_1[24] @[CpxCal.scala 290:18]
      regInfix[25] <= REG_1[25] @[CpxCal.scala 290:18]
      regInfix[26] <= REG_1[26] @[CpxCal.scala 290:18]
      regInfix[27] <= REG_1[27] @[CpxCal.scala 290:18]
      regInfix[28] <= REG_1[28] @[CpxCal.scala 290:18]
      regInfix[29] <= REG_1[29] @[CpxCal.scala 290:18]
      regInfix[30] <= REG_1[30] @[CpxCal.scala 290:18]
      regInfix[31] <= REG_1[31] @[CpxCal.scala 290:18]
      regInfix[32] <= REG_1[32] @[CpxCal.scala 290:18]
      regInfix[33] <= REG_1[33] @[CpxCal.scala 290:18]
      regInfix[34] <= REG_1[34] @[CpxCal.scala 290:18]
      regInfix[35] <= REG_1[35] @[CpxCal.scala 290:18]
      regInfix[36] <= REG_1[36] @[CpxCal.scala 290:18]
      regInfix[37] <= REG_1[37] @[CpxCal.scala 290:18]
      regInfix[38] <= REG_1[38] @[CpxCal.scala 290:18]
      regInfix[39] <= REG_1[39] @[CpxCal.scala 290:18]
      regInfix[40] <= REG_1[40] @[CpxCal.scala 290:18]
      regInfix[41] <= REG_1[41] @[CpxCal.scala 290:18]
      regInfix[42] <= REG_1[42] @[CpxCal.scala 290:18]
      regInfix[43] <= REG_1[43] @[CpxCal.scala 290:18]
      regInfix[44] <= REG_1[44] @[CpxCal.scala 290:18]
      regInfix[45] <= REG_1[45] @[CpxCal.scala 290:18]
      regInfix[46] <= REG_1[46] @[CpxCal.scala 290:18]
      regInfix[47] <= REG_1[47] @[CpxCal.scala 290:18]
      regInfix[48] <= REG_1[48] @[CpxCal.scala 290:18]
      regInfix[49] <= REG_1[49] @[CpxCal.scala 290:18]
      reg REG_2 : UInt<32>[50], clock with :
        reset => (UInt<1>("h0"), REG_2) @[CpxCal.scala 291:23]
      regPost[0] <= REG_2[0] @[CpxCal.scala 291:17]
      regPost[1] <= REG_2[1] @[CpxCal.scala 291:17]
      regPost[2] <= REG_2[2] @[CpxCal.scala 291:17]
      regPost[3] <= REG_2[3] @[CpxCal.scala 291:17]
      regPost[4] <= REG_2[4] @[CpxCal.scala 291:17]
      regPost[5] <= REG_2[5] @[CpxCal.scala 291:17]
      regPost[6] <= REG_2[6] @[CpxCal.scala 291:17]
      regPost[7] <= REG_2[7] @[CpxCal.scala 291:17]
      regPost[8] <= REG_2[8] @[CpxCal.scala 291:17]
      regPost[9] <= REG_2[9] @[CpxCal.scala 291:17]
      regPost[10] <= REG_2[10] @[CpxCal.scala 291:17]
      regPost[11] <= REG_2[11] @[CpxCal.scala 291:17]
      regPost[12] <= REG_2[12] @[CpxCal.scala 291:17]
      regPost[13] <= REG_2[13] @[CpxCal.scala 291:17]
      regPost[14] <= REG_2[14] @[CpxCal.scala 291:17]
      regPost[15] <= REG_2[15] @[CpxCal.scala 291:17]
      regPost[16] <= REG_2[16] @[CpxCal.scala 291:17]
      regPost[17] <= REG_2[17] @[CpxCal.scala 291:17]
      regPost[18] <= REG_2[18] @[CpxCal.scala 291:17]
      regPost[19] <= REG_2[19] @[CpxCal.scala 291:17]
      regPost[20] <= REG_2[20] @[CpxCal.scala 291:17]
      regPost[21] <= REG_2[21] @[CpxCal.scala 291:17]
      regPost[22] <= REG_2[22] @[CpxCal.scala 291:17]
      regPost[23] <= REG_2[23] @[CpxCal.scala 291:17]
      regPost[24] <= REG_2[24] @[CpxCal.scala 291:17]
      regPost[25] <= REG_2[25] @[CpxCal.scala 291:17]
      regPost[26] <= REG_2[26] @[CpxCal.scala 291:17]
      regPost[27] <= REG_2[27] @[CpxCal.scala 291:17]
      regPost[28] <= REG_2[28] @[CpxCal.scala 291:17]
      regPost[29] <= REG_2[29] @[CpxCal.scala 291:17]
      regPost[30] <= REG_2[30] @[CpxCal.scala 291:17]
      regPost[31] <= REG_2[31] @[CpxCal.scala 291:17]
      regPost[32] <= REG_2[32] @[CpxCal.scala 291:17]
      regPost[33] <= REG_2[33] @[CpxCal.scala 291:17]
      regPost[34] <= REG_2[34] @[CpxCal.scala 291:17]
      regPost[35] <= REG_2[35] @[CpxCal.scala 291:17]
      regPost[36] <= REG_2[36] @[CpxCal.scala 291:17]
      regPost[37] <= REG_2[37] @[CpxCal.scala 291:17]
      regPost[38] <= REG_2[38] @[CpxCal.scala 291:17]
      regPost[39] <= REG_2[39] @[CpxCal.scala 291:17]
      regPost[40] <= REG_2[40] @[CpxCal.scala 291:17]
      regPost[41] <= REG_2[41] @[CpxCal.scala 291:17]
      regPost[42] <= REG_2[42] @[CpxCal.scala 291:17]
      regPost[43] <= REG_2[43] @[CpxCal.scala 291:17]
      regPost[44] <= REG_2[44] @[CpxCal.scala 291:17]
      regPost[45] <= REG_2[45] @[CpxCal.scala 291:17]
      regPost[46] <= REG_2[46] @[CpxCal.scala 291:17]
      regPost[47] <= REG_2[47] @[CpxCal.scala 291:17]
      regPost[48] <= REG_2[48] @[CpxCal.scala 291:17]
      regPost[49] <= REG_2[49] @[CpxCal.scala 291:17]
      reg REG_3 : UInt<32>[50], clock with :
        reset => (UInt<1>("h0"), REG_3) @[CpxCal.scala 292:25]
      regPostOp[0] <= REG_3[0] @[CpxCal.scala 292:19]
      regPostOp[1] <= REG_3[1] @[CpxCal.scala 292:19]
      regPostOp[2] <= REG_3[2] @[CpxCal.scala 292:19]
      regPostOp[3] <= REG_3[3] @[CpxCal.scala 292:19]
      regPostOp[4] <= REG_3[4] @[CpxCal.scala 292:19]
      regPostOp[5] <= REG_3[5] @[CpxCal.scala 292:19]
      regPostOp[6] <= REG_3[6] @[CpxCal.scala 292:19]
      regPostOp[7] <= REG_3[7] @[CpxCal.scala 292:19]
      regPostOp[8] <= REG_3[8] @[CpxCal.scala 292:19]
      regPostOp[9] <= REG_3[9] @[CpxCal.scala 292:19]
      regPostOp[10] <= REG_3[10] @[CpxCal.scala 292:19]
      regPostOp[11] <= REG_3[11] @[CpxCal.scala 292:19]
      regPostOp[12] <= REG_3[12] @[CpxCal.scala 292:19]
      regPostOp[13] <= REG_3[13] @[CpxCal.scala 292:19]
      regPostOp[14] <= REG_3[14] @[CpxCal.scala 292:19]
      regPostOp[15] <= REG_3[15] @[CpxCal.scala 292:19]
      regPostOp[16] <= REG_3[16] @[CpxCal.scala 292:19]
      regPostOp[17] <= REG_3[17] @[CpxCal.scala 292:19]
      regPostOp[18] <= REG_3[18] @[CpxCal.scala 292:19]
      regPostOp[19] <= REG_3[19] @[CpxCal.scala 292:19]
      regPostOp[20] <= REG_3[20] @[CpxCal.scala 292:19]
      regPostOp[21] <= REG_3[21] @[CpxCal.scala 292:19]
      regPostOp[22] <= REG_3[22] @[CpxCal.scala 292:19]
      regPostOp[23] <= REG_3[23] @[CpxCal.scala 292:19]
      regPostOp[24] <= REG_3[24] @[CpxCal.scala 292:19]
      regPostOp[25] <= REG_3[25] @[CpxCal.scala 292:19]
      regPostOp[26] <= REG_3[26] @[CpxCal.scala 292:19]
      regPostOp[27] <= REG_3[27] @[CpxCal.scala 292:19]
      regPostOp[28] <= REG_3[28] @[CpxCal.scala 292:19]
      regPostOp[29] <= REG_3[29] @[CpxCal.scala 292:19]
      regPostOp[30] <= REG_3[30] @[CpxCal.scala 292:19]
      regPostOp[31] <= REG_3[31] @[CpxCal.scala 292:19]
      regPostOp[32] <= REG_3[32] @[CpxCal.scala 292:19]
      regPostOp[33] <= REG_3[33] @[CpxCal.scala 292:19]
      regPostOp[34] <= REG_3[34] @[CpxCal.scala 292:19]
      regPostOp[35] <= REG_3[35] @[CpxCal.scala 292:19]
      regPostOp[36] <= REG_3[36] @[CpxCal.scala 292:19]
      regPostOp[37] <= REG_3[37] @[CpxCal.scala 292:19]
      regPostOp[38] <= REG_3[38] @[CpxCal.scala 292:19]
      regPostOp[39] <= REG_3[39] @[CpxCal.scala 292:19]
      regPostOp[40] <= REG_3[40] @[CpxCal.scala 292:19]
      regPostOp[41] <= REG_3[41] @[CpxCal.scala 292:19]
      regPostOp[42] <= REG_3[42] @[CpxCal.scala 292:19]
      regPostOp[43] <= REG_3[43] @[CpxCal.scala 292:19]
      regPostOp[44] <= REG_3[44] @[CpxCal.scala 292:19]
      regPostOp[45] <= REG_3[45] @[CpxCal.scala 292:19]
      regPostOp[46] <= REG_3[46] @[CpxCal.scala 292:19]
      regPostOp[47] <= REG_3[47] @[CpxCal.scala 292:19]
      regPostOp[48] <= REG_3[48] @[CpxCal.scala 292:19]
      regPostOp[49] <= REG_3[49] @[CpxCal.scala 292:19]
      regItemCnt <= UInt<1>("h0") @[CpxCal.scala 293:20]
      regRP_wait <= UInt<1>("h0") @[CpxCal.scala 294:20]
      regIn2Post_done <= UInt<1>("h0") @[CpxCal.scala 295:25]
      regIn2Post_idx <= UInt<1>("h0") @[CpxCal.scala 296:24]
      regPost_idx <= UInt<1>("h0") @[CpxCal.scala 297:21]
      regEva_idx <= UInt<1>("h0") @[CpxCal.scala 298:20]
      sp <= UInt<1>("h0") @[CpxCal.scala 299:12]
      sp_eva <= UInt<1>("h0") @[CpxCal.scala 300:16]
      Try <= UInt<1>("h0") @[CpxCal.scala 301:13]
    node _T_226 = eq(state, UInt<4>("h9")) @[CpxCal.scala 304:33]
    node _T_227 = mux(_T_226, UInt<1>("h1"), UInt<1>("h0")) @[CpxCal.scala 304:26]
    io.value.valid <= _T_227 @[CpxCal.scala 304:20]
    infer mport MPORT_14 = stack_eva[UInt<1>("h0")], clock @[CpxCal.scala 305:31]
    io.value.bits <= MPORT_14 @[CpxCal.scala 305:19]

